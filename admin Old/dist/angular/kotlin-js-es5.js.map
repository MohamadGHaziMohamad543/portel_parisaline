{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/kotlin/kotlin.js"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    // the default separators except `@$`\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['/*', '*/'],\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')'],\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n        { open: '<', close: '>' },\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\r\n            end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.kt',\r\n    keywords: [\r\n        'as', 'as?', 'break', 'class', 'continue', 'do', 'else', 'false', 'for', 'fun', 'if',\r\n        'in', '!in', 'interface', 'is', '!is', 'null', 'object', 'package', 'return', 'super',\r\n        'this', 'throw', 'true', 'try', 'typealias', 'val', 'var', 'when', 'while', 'by',\r\n        'catch', 'constructor', 'delegate', 'dynamic', 'field', 'file', 'finally', 'get',\r\n        'import', 'init', 'param', 'property', 'receiver', 'set', 'setparam', 'where', 'actual',\r\n        'abstract', 'annotation', 'companion', 'const', 'crossinline', 'data', 'enum', 'expect',\r\n        'external', 'final', 'infix', 'inline', 'inner', 'internal', 'lateinit', 'noinline',\r\n        'open', 'operator', 'out', 'override', 'private', 'protected', 'public', 'reified',\r\n        'sealed', 'suspend', 'tailrec', 'vararg', 'field', 'it'\r\n    ],\r\n    operators: [\r\n        '+', '-', '*', '/', '%', '=', '+=', '-=', '*=', '/=',\r\n        '%=', '++', '--', '&&', '||', '!', '==', '!=', '===',\r\n        '!==', '>', '<', '<=', '>=', '[', ']', '!!', '?.', '?:',\r\n        '::', '..', ':', '?', '->', '@', ';', '$', '_'\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    digits: /\\d+(_+\\d+)*/,\r\n    octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n    binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n    hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // class name highlighting\r\n            [/[A-Z][\\w\\$]*/, 'type.identifier'],\r\n            // identifiers and keywords\r\n            [/[a-zA-Z_$][\\w$]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // delimiters and operators\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/[<>](?!@symbols)/, '@brackets'],\r\n            [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            // @ annotations.\r\n            [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\r\n            // numbers\r\n            [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n            [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n            [/0[xX](@hexdigits)[Ll]?/, 'number.hex'],\r\n            [/0(@octaldigits)[Ll]?/, 'number.octal'],\r\n            [/0[bB](@binarydigits)[Ll]?/, 'number.binary'],\r\n            [/(@digits)[fFdD]/, 'number.float'],\r\n            [/(@digits)[lL]?/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            // strings\r\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/\"\"\"/, 'string', '@multistring'],\r\n            [/\"/, 'string', '@string'],\r\n            // characters\r\n            [/'[^\\\\']'/, 'string'],\r\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n            [/'/, 'string.invalid']\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@javadoc'],\r\n            [/\\/\\*/, 'comment', '@comment'],\r\n            [/\\/\\/.*$/, 'comment'],\r\n        ],\r\n        comment: [\r\n            [/[^\\/*]+/, 'comment'],\r\n            [/\\/\\*/, 'comment', '@comment'],\r\n            [/\\*\\//, 'comment', '@pop'],\r\n            [/[\\/*]/, 'comment']\r\n        ],\r\n        //Identical copy of comment above, except for the addition of .doc\r\n        javadoc: [\r\n            [/[^\\/*]+/, 'comment.doc'],\r\n            [/\\/\\*/, 'comment.doc', '@push'],\r\n            [/\\/\\*/, 'comment.doc.invalid'],\r\n            [/\\*\\//, 'comment.doc', '@pop'],\r\n            [/[\\/*]/, 'comment.doc']\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"/, 'string', '@pop']\r\n        ],\r\n        multistring: [\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"\"\"/, 'string', '@pop'],\r\n            [/./, 'string']\r\n        ],\r\n    },\r\n};\r\n"],"sourceRoot":"webpack:///","file":"kotlin-js-es5.js"}