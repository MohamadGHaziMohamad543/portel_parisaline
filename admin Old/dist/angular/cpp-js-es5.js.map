{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/cpp/cpp.js"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['/*', '*/'],\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '[', close: ']' },\r\n        { open: '{', close: '}' },\r\n        { open: '(', close: ')' },\r\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\r\n        { open: '\"', close: '\"', notIn: ['string'] },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*#pragma\\\\s+region\\\\b\"),\r\n            end: new RegExp(\"^\\\\s*#pragma\\\\s+endregion\\\\b\")\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.cpp',\r\n    brackets: [\r\n        { token: 'delimiter.curly', open: '{', close: '}' },\r\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\r\n        { token: 'delimiter.square', open: '[', close: ']' },\r\n        { token: 'delimiter.angle', open: '<', close: '>' }\r\n    ],\r\n    keywords: [\r\n        'abstract',\r\n        'amp',\r\n        'array',\r\n        'auto',\r\n        'bool',\r\n        'break',\r\n        'case',\r\n        'catch',\r\n        'char',\r\n        'class',\r\n        'const',\r\n        'constexpr',\r\n        'const_cast',\r\n        'continue',\r\n        'cpu',\r\n        'decltype',\r\n        'default',\r\n        'delegate',\r\n        'delete',\r\n        'do',\r\n        'double',\r\n        'dynamic_cast',\r\n        'each',\r\n        'else',\r\n        'enum',\r\n        'event',\r\n        'explicit',\r\n        'export',\r\n        'extern',\r\n        'false',\r\n        'final',\r\n        'finally',\r\n        'float',\r\n        'for',\r\n        'friend',\r\n        'gcnew',\r\n        'generic',\r\n        'goto',\r\n        'if',\r\n        'in',\r\n        'initonly',\r\n        'inline',\r\n        'int',\r\n        'interface',\r\n        'interior_ptr',\r\n        'internal',\r\n        'literal',\r\n        'long',\r\n        'mutable',\r\n        'namespace',\r\n        'new',\r\n        'noexcept',\r\n        'nullptr',\r\n        '__nullptr',\r\n        'operator',\r\n        'override',\r\n        'partial',\r\n        'pascal',\r\n        'pin_ptr',\r\n        'private',\r\n        'property',\r\n        'protected',\r\n        'public',\r\n        'ref',\r\n        'register',\r\n        'reinterpret_cast',\r\n        'restrict',\r\n        'return',\r\n        'safe_cast',\r\n        'sealed',\r\n        'short',\r\n        'signed',\r\n        'sizeof',\r\n        'static',\r\n        'static_assert',\r\n        'static_cast',\r\n        'struct',\r\n        'switch',\r\n        'template',\r\n        'this',\r\n        'thread_local',\r\n        'throw',\r\n        'tile_static',\r\n        'true',\r\n        'try',\r\n        'typedef',\r\n        'typeid',\r\n        'typename',\r\n        'union',\r\n        'unsigned',\r\n        'using',\r\n        'virtual',\r\n        'void',\r\n        'volatile',\r\n        'wchar_t',\r\n        'where',\r\n        'while',\r\n        '_asm',\r\n        '_based',\r\n        '_cdecl',\r\n        '_declspec',\r\n        '_fastcall',\r\n        '_if_exists',\r\n        '_if_not_exists',\r\n        '_inline',\r\n        '_multiple_inheritance',\r\n        '_pascal',\r\n        '_single_inheritance',\r\n        '_stdcall',\r\n        '_virtual_inheritance',\r\n        '_w64',\r\n        '__abstract',\r\n        '__alignof',\r\n        '__asm',\r\n        '__assume',\r\n        '__based',\r\n        '__box',\r\n        '__builtin_alignof',\r\n        '__cdecl',\r\n        '__clrcall',\r\n        '__declspec',\r\n        '__delegate',\r\n        '__event',\r\n        '__except',\r\n        '__fastcall',\r\n        '__finally',\r\n        '__forceinline',\r\n        '__gc',\r\n        '__hook',\r\n        '__identifier',\r\n        '__if_exists',\r\n        '__if_not_exists',\r\n        '__inline',\r\n        '__int128',\r\n        '__int16',\r\n        '__int32',\r\n        '__int64',\r\n        '__int8',\r\n        '__interface',\r\n        '__leave',\r\n        '__m128',\r\n        '__m128d',\r\n        '__m128i',\r\n        '__m256',\r\n        '__m256d',\r\n        '__m256i',\r\n        '__m64',\r\n        '__multiple_inheritance',\r\n        '__newslot',\r\n        '__nogc',\r\n        '__noop',\r\n        '__nounwind',\r\n        '__novtordisp',\r\n        '__pascal',\r\n        '__pin',\r\n        '__pragma',\r\n        '__property',\r\n        '__ptr32',\r\n        '__ptr64',\r\n        '__raise',\r\n        '__restrict',\r\n        '__resume',\r\n        '__sealed',\r\n        '__single_inheritance',\r\n        '__stdcall',\r\n        '__super',\r\n        '__thiscall',\r\n        '__try',\r\n        '__try_cast',\r\n        '__typeof',\r\n        '__unaligned',\r\n        '__unhook',\r\n        '__uuidof',\r\n        '__value',\r\n        '__virtual_inheritance',\r\n        '__w64',\r\n        '__wchar_t'\r\n    ],\r\n    operators: [\r\n        '=', '>', '<', '!', '~', '?', ':',\r\n        '==', '<=', '>=', '!=', '&&', '||', '++', '--',\r\n        '+', '-', '*', '/', '&', '|', '^', '%', '<<',\r\n        '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\r\n        '^=', '%=', '<<=', '>>=', '>>>='\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    integersuffix: /(ll|LL|u|U|l|L)?(ll|LL|u|U|l|L)?/,\r\n    floatsuffix: /[fFlL]?/,\r\n    encoding: /u|u8|U|L/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // C++ 11 Raw String\r\n            [/@encoding?R\\\"(?:([^ ()\\\\\\t]*))\\(/, { token: 'string.raw.begin', next: '@raw.$1' }],\r\n            // identifiers and keywords\r\n            [/[a-zA-Z_]\\w*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // [[ attributes ]].\r\n            [/\\[\\[.*\\]\\]/, 'annotation'],\r\n            [/^\\s*#include/, { token: 'keyword.directive.include', next: '@include' }],\r\n            // Preprocessor directive\r\n            [/^\\s*#\\s*\\w+/, 'keyword'],\r\n            // delimiters and operators\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/[<>](?!@symbols)/, '@brackets'],\r\n            [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            // numbers\r\n            [/\\d*\\d+[eE]([\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\r\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\r\n            [/0[xX][0-9a-fA-F']*[0-9a-fA-F](@integersuffix)/, 'number.hex'],\r\n            [/0[0-7']*[0-7](@integersuffix)/, 'number.octal'],\r\n            [/0[bB][0-1']*[0-1](@integersuffix)/, 'number.binary'],\r\n            [/\\d[\\d']*\\d(@integersuffix)/, 'number'],\r\n            [/\\d(@integersuffix)/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            // strings\r\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/\"/, 'string', '@string'],\r\n            // characters\r\n            [/'[^\\\\']'/, 'string'],\r\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n            [/'/, 'string.invalid']\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@doccomment'],\r\n            [/\\/\\*/, 'comment', '@comment'],\r\n            [/\\/\\/.*$/, 'comment'],\r\n        ],\r\n        comment: [\r\n            [/[^\\/*]+/, 'comment'],\r\n            [/\\*\\//, 'comment', '@pop'],\r\n            [/[\\/*]/, 'comment']\r\n        ],\r\n        //Identical copy of comment above, except for the addition of .doc\r\n        doccomment: [\r\n            [/[^\\/*]+/, 'comment.doc'],\r\n            [/\\*\\//, 'comment.doc', '@pop'],\r\n            [/[\\/*]/, 'comment.doc']\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"/, 'string', '@pop']\r\n        ],\r\n        raw: [\r\n            [/(.*)(\\))(?:([^ ()\\\\\\t]*))(\\\")/, {\r\n                    cases: {\r\n                        '$3==$S2': ['string.raw', 'string.raw.end', 'string.raw.end', { token: 'string.raw.end', next: '@pop' }],\r\n                        '@default': ['string.raw', 'string.raw', 'string.raw', 'string.raw']\r\n                    }\r\n                }\r\n            ],\r\n            [/.*/, 'string.raw']\r\n        ],\r\n        include: [\r\n            [/(\\s*)(<)([^<>]*)(>)/, ['', 'keyword.directive.include.begin', 'string.include.identifier', { token: 'keyword.directive.include.end', next: '@pop' }]],\r\n            [/(\\s*)(\")([^\"]*)(\")/, ['', 'keyword.directive.include.begin', 'string.include.identifier', { token: 'keyword.directive.include.end', next: '@pop' }]]\r\n        ]\r\n    },\r\n};\r\n"],"sourceRoot":"webpack:///","file":"cpp-js-es5.js"}