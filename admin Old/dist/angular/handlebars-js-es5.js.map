{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/handlebars/handlebars.js"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\n// Allow for running under nodejs/requirejs in tests\r\nvar _monaco = (typeof monaco === 'undefined' ? self.monaco : monaco);\r\nvar EMPTY_ELEMENTS = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr'];\r\nexport var conf = {\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\r\n    comments: {\r\n        blockComment: ['{{!--', '--}}']\r\n    },\r\n    brackets: [\r\n        ['<!--', '-->'],\r\n        ['<', '>'],\r\n        ['{{', '}}'],\r\n        ['{', '}'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '<', close: '>' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' }\r\n    ],\r\n    onEnterRules: [\r\n        {\r\n            beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\r\n            afterText: /^<\\/(\\w[\\w\\d]*)\\s*>$/i,\r\n            action: { indentAction: _monaco.languages.IndentAction.IndentOutdent }\r\n        },\r\n        {\r\n            beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\r\n            action: { indentAction: _monaco.languages.IndentAction.Indent }\r\n        }\r\n    ],\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '',\r\n    // ignoreCase: true,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.root' }],\r\n            [/<!DOCTYPE/, 'metatag.html', '@doctype'],\r\n            [/<!--/, 'comment.html', '@comment'],\r\n            [/(<)(\\w+)(\\/>)/, ['delimiter.html', 'tag.html', 'delimiter.html']],\r\n            [/(<)(script)/, ['delimiter.html', { token: 'tag.html', next: '@script' }]],\r\n            [/(<)(style)/, ['delimiter.html', { token: 'tag.html', next: '@style' }]],\r\n            [/(<)([:\\w]+)/, ['delimiter.html', { token: 'tag.html', next: '@otherTag' }]],\r\n            [/(<\\/)(\\w+)/, ['delimiter.html', { token: 'tag.html', next: '@otherTag' }]],\r\n            [/</, 'delimiter.html'],\r\n            [/\\{/, 'delimiter.html'],\r\n            [/[^<{]+/] // text\r\n        ],\r\n        doctype: [\r\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.comment' }],\r\n            [/[^>]+/, 'metatag.content.html'],\r\n            [/>/, 'metatag.html', '@pop'],\r\n        ],\r\n        comment: [\r\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.comment' }],\r\n            [/-->/, 'comment.html', '@pop'],\r\n            [/[^-]+/, 'comment.content.html'],\r\n            [/./, 'comment.content.html']\r\n        ],\r\n        otherTag: [\r\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.otherTag' }],\r\n            [/\\/?>/, 'delimiter.html', '@pop'],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/[ \\t\\r\\n]+/],\r\n        ],\r\n        // -- BEGIN <script> tags handling\r\n        // After <script\r\n        script: [\r\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.script' }],\r\n            [/type/, 'attribute.name', '@scriptAfterType'],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/(<\\/)(script\\s*)(>)/, ['delimiter.html', 'tag.html', { token: 'delimiter.html', next: '@pop' }]]\r\n        ],\r\n        // After <script ... type\r\n        scriptAfterType: [\r\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.scriptAfterType' }],\r\n            [/=/, 'delimiter', '@scriptAfterTypeEquals'],\r\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <script ... type =\r\n        scriptAfterTypeEquals: [\r\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.scriptAfterTypeEquals' }],\r\n            [/\"([^\"]*)\"/, { token: 'attribute.value', switchTo: '@scriptWithCustomType.$1' }],\r\n            [/'([^']*)'/, { token: 'attribute.value', switchTo: '@scriptWithCustomType.$1' }],\r\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <script ... type = $S2\r\n        scriptWithCustomType: [\r\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.scriptWithCustomType.$S2' }],\r\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.$S2', nextEmbedded: '$S2' }],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        scriptEmbedded: [\r\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInEmbeddedState.scriptEmbedded.$S2', nextEmbedded: '@pop' }],\r\n            [/<\\/script/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }]\r\n        ],\r\n        // -- END <script> tags handling\r\n        // -- BEGIN <style> tags handling\r\n        // After <style\r\n        style: [\r\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.style' }],\r\n            [/type/, 'attribute.name', '@styleAfterType'],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/(<\\/)(style\\s*)(>)/, ['delimiter.html', 'tag.html', { token: 'delimiter.html', next: '@pop' }]]\r\n        ],\r\n        // After <style ... type\r\n        styleAfterType: [\r\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.styleAfterType' }],\r\n            [/=/, 'delimiter', '@styleAfterTypeEquals'],\r\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <style ... type =\r\n        styleAfterTypeEquals: [\r\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.styleAfterTypeEquals' }],\r\n            [/\"([^\"]*)\"/, { token: 'attribute.value', switchTo: '@styleWithCustomType.$1' }],\r\n            [/'([^']*)'/, { token: 'attribute.value', switchTo: '@styleWithCustomType.$1' }],\r\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <style ... type = $S2\r\n        styleWithCustomType: [\r\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.styleWithCustomType.$S2' }],\r\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.$S2', nextEmbedded: '$S2' }],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        styleEmbedded: [\r\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInEmbeddedState.styleEmbedded.$S2', nextEmbedded: '@pop' }],\r\n            [/<\\/style/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }]\r\n        ],\r\n        // -- END <style> tags handling\r\n        handlebarsInSimpleState: [\r\n            [/\\{\\{\\{?/, 'delimiter.handlebars'],\r\n            [/\\}\\}\\}?/, { token: 'delimiter.handlebars', switchTo: '@$S2.$S3' }],\r\n            { include: 'handlebarsRoot' }\r\n        ],\r\n        handlebarsInEmbeddedState: [\r\n            [/\\{\\{\\{?/, 'delimiter.handlebars'],\r\n            [/\\}\\}\\}?/, { token: 'delimiter.handlebars', switchTo: '@$S2.$S3', nextEmbedded: '$S3' }],\r\n            { include: 'handlebarsRoot' }\r\n        ],\r\n        handlebarsRoot: [\r\n            [/\"[^\"]*\"/, 'string.handlebars'],\r\n            [/[#/][^\\s}]+/, 'keyword.helper.handlebars'],\r\n            [/else\\b/, 'keyword.helper.handlebars'],\r\n            [/[\\s]+/],\r\n            [/[^}]/, 'variable.parameter.handlebars'],\r\n        ],\r\n    },\r\n};\r\n"],"sourceRoot":"webpack:///","file":"handlebars-js-es5.js"}