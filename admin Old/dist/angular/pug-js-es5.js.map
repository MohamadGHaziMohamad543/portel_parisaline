{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/pug/pug.js"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,MAAA,EAAA,YAAA;AAAA,aAAA,IAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,UAAA,EAAA,YAAA;AAAA,aAAA,QAAA;AAAA,KAAA;AAAA;;;;;;AAKO,QAAA,IAAA,GAAA;AACP,MAAA,QAAA,EAAA;AACA,QAAA,WAAA,EAAA;AADA,OADO;AAIP,MAAA,QAAA,EAAA,CAAA,CAAA,GAAA,EAAkB,GAAlB,CAAA,EAAuB,CAAA,GAAA,EAAA,GAAA,CAAvB,EAAuB,CAAA,GAAA,EAAA,GAAA,CAAvB,CAJO;AAKP,MAAA,gBAAA,EAAA,CACA;AAAS,QAAA,IAAA,EAAA,GAAT;AAAS,QAAA,KAAA,EAAA,GAAT;AAAS,QAAA,KAAA,EAAA,CAAA,QAAA,EAAA,SAAA;AAAT,OADA,EAEA;AAAS,QAAA,IAAA,EAAA,IAAT;AAAS,QAAA,KAAA,EAAA,IAAT;AAAS,QAAA,KAAA,EAAA,CAAA,QAAA,EAAA,SAAA;AAAT,OAFA,EAGA;AAAS,QAAA,IAAA,EAAA,GAAT;AAAkB,QAAA,KAAA,EAAA,GAAlB;AAA8B,QAAA,KAAA,EAAA,CAAA,QAAA,EAAA,SAAA;AAA9B,OAHA,EAIA;AAAS,QAAA,IAAA,EAAA,GAAT;AAAS,QAAA,KAAA,EAAA,GAAT;AAAS,QAAA,KAAA,EAAA,CAAA,QAAA,EAAA,SAAA;AAAT,OAJA,EAKA;AAAS,QAAA,IAAA,EAAA,GAAT;AAAS,QAAA,KAAA,EAAA,GAAT;AAAS,QAAA,KAAA,EAAA,CAAA,QAAA,EAAA,SAAA;AAAT,OALA,CALO;AAYP,MAAA,OAAA,EAAA;AACA,QAAA,OAAA,EAAA;AADA;AAZO,KAAA;AAgBA,QAAA,QAAA,GAAA;AACP,MAAA,YAAA,EAAA,EADO;AAEP,MAAA,YAAA,EAAA,MAFO;AAGP,MAAA,UAAA,EAAA,IAHO;AAIP,MAAA,QAAA,EAAA,CACA;AAAS,QAAA,KAAA,EAAA,iBAAT;AAAS,QAAA,IAAA,EAAA,GAAT;AAA4C,QAAA,KAAA,EAAA;AAA5C,OADA,EAEA;AAAS,QAAA,KAAA,EAAA,iBAAT;AAAS,QAAA,IAAA,EAAA,GAAT;AAAS,QAAA,KAAA,EAAA;AAAT,OAFA,EAGA;AAAS,QAAA,KAAA,EAAA,uBAAT;AAAS,QAAA,IAAA,EAAA,GAAT;AAAS,QAAA,KAAA,EAAA;AAAT,OAHA,CAJO;AASP,MAAA,QAAA,EAAA,CAAA,QAAA,EAAA,OAAA,EAAA,MAAA,EAAA,SAAA,EAAA,SAAA,EAAA,MAAA,EAAA,MAAA,EAAA,SAAA,EACA,KADA,EACA,IADA,EACA,IADA,EACA,SADA,EACA,OADA,EACA,QADA,EACA,QADA,EACA,KADA,EACA,MADA,CATO;AAWP,MAAA,IAAA,EAAA,CACA,GADA,EACA,MADA,EACA,SADA,EACA,SADA,EACA,MADA,EACA,SADA,EACA,OADA,EACA,OADA,EAEA,GAFA,EAEA,MAFA,EAEA,UAFA,EAEA,KAFA,EAEA,KAFA,EAEA,YAFA,EAEA,MAFA,EAEA,IAFA,EAEA,QAFA,EAGA,QAHA,EAGA,SAHA,EAGA,QAHA,EAGA,MAHA,EAGA,MAHA,EAGA,KAHA,EAGA,UAHA,EAGA,SAHA,EAIA,UAJA,EAIA,IAJA,EAIA,KAJA,EAIA,SAJA,EAIA,KAJA,EAIA,KAJA,EAIA,IAJA,EAIA,IAJA,EAKA,IALA,EAKA,OALA,EAMA,UANA,EAMA,YANA,EAMA,QANA,EAMA,MANA,EAMA,QANA,EAMA,MANA,EAMA,OANA,EAMA,UANA,EAOA,IAPA,EAOA,IAPA,EAOA,IAPA,EAOA,IAPA,EAOA,IAPA,EAOA,IAPA,EAOA,MAPA,EAOA,QAPA,EAOA,QAPA,EAOA,IAPA,EAOA,MAPA,EAQA,GARA,EAQA,QARA,EAQA,KARA,EAQA,OARA,EAQA,KARA,EASA,QATA,EASA,KATA,EAUA,OAVA,EAUA,IAVA,EAUA,MAVA,EAWA,KAXA,EAWA,MAXA,EAWA,MAXA,EAWA,MAXA,EAWA,OAXA,EAYA,KAZA,EAYA,UAZA,EAYA,UAZA,EAaA,QAbA,EAaA,IAbA,EAaA,UAbA,EAaA,QAbA,EAaA,QAbA,EAcA,GAdA,EAcA,OAdA,EAcA,KAdA,EAcA,UAdA,EAeA,GAfA,EAgBA,IAhBA,EAgBA,IAhBA,EAgBA,MAhBA,EAiBA,GAjBA,EAiBA,MAjBA,EAiBA,QAjBA,EAiBA,SAjBA,EAiBA,QAjBA,EAiBA,OAjBA,EAiBA,QAjBA,EAiBA,MAjBA,EAiBA,QAjBA,EAiBA,QAjBA,EAiBA,OAjBA,EAiBA,KAjBA,EAiBA,SAjBA,EAiBA,KAjBA,EAkBA,OAlBA,EAkBA,OAlBA,EAkBA,IAlBA,EAkBA,UAlBA,EAkBA,OAlBA,EAkBA,IAlBA,EAkBA,OAlBA,EAkBA,MAlBA,EAkBA,OAlBA,EAkBA,IAlBA,EAkBA,QAlBA,EAkBA,IAlBA,EAmBA,GAnBA,EAmBA,IAnBA,EAoBA,OApBA,EAqBA,KArBA,CAXO;AAkCP;AACA,MAAA,OAAA,EAAA,6BAnCO;AAoCP,MAAA,OAAA,EAAA,uEApCO;AAqCP,MAAA,SAAA,EAAA;AACA,QAAA,IAAA,EAAA,CACA;AACA,SAAA,0BAAA,EACA;AACA,UAAA,KAAA,EAAA;AACA,uBAAA;AACA,cAAA,KAAA,EAAA;AACA,wBAAA,CAAA,EAAA,EAAA,KAAA,CADA;AAEA,4BAAA,CAAA,EAAA,EAAA;AAAkD,kBAAA,KAAA,EAAA,KAAlD;AAAkD,kBAAA,IAAA,EAAA;AAAlD,iBAAA;AAFA;AADA,aADA;AAOA,2BAAA,CAAA,EAAA,EAAA;AAA6C,cAAA,KAAA,EAAA;AAA7C,aAAA,CAPA;AAQA,wBAAA,CAAA,EAAA,EAAA,EAAA;AARA;AADA,SADA,CAFA,EAgBA;AACA,SAAA,2BAAA,EAAA;AACA,UAAA,KAAA,EAAA;AACA,oBAAA,CAAA,EAAA,EAAA,QAAA,CADA;AAEA,wBAAA,CAAA,EAAA,EAAA;AAA0C,cAAA,KAAA,EAAA,QAA1C;AAA0C,cAAA,IAAA,EAAA;AAA1C,aAAA;AAFA;AADA,SAAA,CAjBA,EAuBA;AACA,SAAA,4BAAA,EAAA;AACA,UAAA,KAAA,EAAA;AACA,oBAAA,CAAA,EAAA,EAAA,WAAA,CADA;AAEA,wBAAA,CAAA,EAAA,EAAA;AAA0C,cAAA,KAAA,EAAA,WAA1C;AAA0C,cAAA,IAAA,EAAA;AAA1C,aAAA;AAFA;AADA,SAAA,CAxBA,EA8BA;AACA,SAAA,eAAA,EAAA,EAAA,CA/BA,EAgCA;AAAa,UAAA,OAAA,EAAA;AAAb,SAhCA,EAiCA;AACA,SAAA,kBAAA,EAAA;AACA,UAAA,KAAA,EAAA;AACA,yBAAA;AAAsC,cAAA,KAAA,EAAA;AAAtC,aADA;AAEA,wBAAA;AAFA;AADA,SAAA,CAlCA,EAwCA;AACA,SAAA,YAAA,EAAiB,WAAjB,CAzCA,EA0CA,CAAA,UAAA,EAAA,WAAA,CA1CA,EA2CA;AACA,SAAA,0BAAA,EAAA,cAAA,CA5CA,EA6CA,CAAA,KAAA,EAAA,QAAA,CA7CA,EA8CA;AACA,SAAA,GAAA,EAAA,QAAA,EAAA,WAAA,CA/CA,EAgDA,CAAA,GAAA,EAAA,QAAA,EAAA,YAAA,CAhDA,CADA;AAmDA,QAAA,GAAA,EAAA,CACA,CAAA,YAAA,EAAA,CAAA;AAA6B,UAAA,KAAA,EAAA,WAA7B;AAA6B,UAAA,IAAA,EAAA;AAA7B,SAAA,EAA2E,EAA3E,CAAA,CADA,EAEA,CAAA,KAAA,EAAA;AAAqB,UAAA,KAAA,EAAA,EAArB;AAAqB,UAAA,IAAA,EAAA;AAArB,SAAA,CAFA,EAGA;AACA,SAAA,mBAAA,EAAA;AACA,UAAA,KAAA,EAAA;AACA,oBAAA;AAAiC,cAAA,KAAA,EAAA,QAAjC;AAAiC,cAAA,IAAA,EAAA;AAAjC,aADA;AAEA,wBAAA;AAFA;AADA,SAAA,CAJA,EAUA;AACA,SAAA,oBAAA,EAAA;AACA,UAAA,KAAA,EAAA;AACA,oBAAA;AAAiC,cAAA,KAAA,EAAA,WAAjC;AAAiC,cAAA,IAAA,EAAA;AAAjC,aADA;AAEA,wBAAA;AAFA;AADA,SAAA,CAXA,EAiBA;AACA,SAAA,IAAA,EAAA;AAAoB,UAAA,KAAA,EAAA,uBAApB;AAAoB,UAAA,IAAA,EAAA;AAApB,SAAA,CAlBA,CAnDA;AAuEA,QAAA,UAAA,EAAA,CACA,CAAA,QAAA,EAAA;AAAwB,UAAA,KAAA,EAAA,EAAxB;AAAwB,UAAA,IAAA,EAAA;AAAxB,SAAA,CADA,EAEA,CAAA,OAAA,EAAA;AAAuB,UAAA,KAAA,EAAA;AAAvB,SAAA,CAFA,EAGA;AACA,SAAA,gBAAA,EAA2B;AAC3B,UAAA,KAAA,EAAA;AACA,oBAAA,CAAA,yBAAA,EAAA,eAAA,EAAA;AAA8E,cAAA,KAAA,EAAA,yBAA9E;AAA8E,cAAA,IAAA,EAAA;AAA9E,aAAA,CADA;AAEA,wBAAA,CAAA,yBAAA,EAAA,eAAA,EAAA,yBAAA;AAFA;AAD2B,SAA3B,CAJA,EAUA,CAAA,IAAA,EAAA;AAAoB,UAAA,KAAA,EAAA,EAApB;AAAoB,UAAA,IAAA,EAAA;AAApB,SAAA,CAVA,EAWA,CAAA,GAAA,EAAA,EAAA,CAXA,CAvEA;AAoFA,QAAA,aAAA,EAAA,CACA,CAAA,KAAA,EAAA,EAAA,CADA,EAEA,CAAA,qBAAA,EAAA,CAAA,gBAAA,EAAA,WAAA,EAAA;AAAqE,UAAA,KAAA,EAAA,iBAArE;AAAqE,UAAA,IAAA,EAAA;AAArE,SAAA,CAAA,CAFA,EAGA,CAAA,KAAA,EAAA,gBAAA,CAHA,EAIA,CAAA,GAAA,EAAA;AACA,UAAA,KAAA,EAAA;AACA,oBAAA;AAAiC,cAAA,KAAA,EAAA,qBAAjC;AAAiC,cAAA,IAAA,EAAA;AAAjC,aADA;AAEA,wBAAA;AAFA;AADA,SAAA,CAJA,EAUA,CAAA,KAAA,EAAA;AAAqB,UAAA,KAAA,EAAA,uBAArB;AAAqB,UAAA,IAAA,EAAA;AAArB,SAAA,CAVA,EAWA,CAAA,IAAA,EAAA;AAAoB,UAAA,KAAA,EAAA,uBAApB;AAAoB,UAAA,IAAA,EAAA;AAApB,SAAA,CAXA,CApFA;AAiGA,QAAA,UAAA,EAAA,CACA,CAAA,iBAAA,EAAA;AAAiC,UAAA,KAAA,EAAA,SAAjC;AAAiC,UAAA,IAAA,EAAA;AAAjC,SAAA,CADA,EAEA,CAAA,YAAA,EAAA,EAAA,CAFA,EAGA,CAAA,MAAA,EAAA;AAAsB,UAAA,KAAA,EAAA,SAAtB;AAAsB,UAAA,IAAA,EAAA;AAAtB,SAAA,CAHA,CAjGA;AAsGA,QAAA,SAAA,EAAA,CACA,CAAA,SAAA,EAAA;AACA,UAAA,KAAA,EAAA;AACA,4BAAA;AAAyC,cAAA,KAAA,EAAA;AAAzC,aADA;AAEA,wBAAA;AAAqC,cAAA,KAAA,EAAA,UAArC;AAAqC,cAAA,IAAA,EAAA;AAArC;AAFA;AADA,SAAA,CADA,EAOA,CAAA,GAAA,EAAA;AAAmB,UAAA,KAAA,EAAA,UAAnB;AAAmB,UAAA,IAAA,EAAA;AAAnB,SAAA,CAPA,CAtGA;AA+GA,QAAA,OAAA,EAAA,CACA,CAAA,SAAA,EAAA,iBAAA,CADA,EAEA,CAAA,KAAA,EAAA;AAAqB,UAAA,KAAA,EAAA,SAArB;AAAqB,UAAA,IAAA,EAAA;AAArB,SAAA,CAFA,EAGA,CAAA,MAAA,EAAA,yBAAA,CAHA,EAIA,CAAA,OAAA,EAAA,iBAAA,CAJA,CA/GA;AAqHA,QAAA,MAAA,EAAA,CACA,CAAA,WAAA,EAAA;AACA,UAAA,KAAA,EAAA;AACA,oBAAA;AAAiC,cAAA,KAAA,EAAA,QAAjC;AAAiC,cAAA,IAAA,EAAA;AAAjC,aADA;AAEA,wBAAA;AAFA;AADA,SAAA,CADA,EAOA,CAAA,UAAA,EAAA;AACA,UAAA,KAAA,EAAA;AACA,oBAAA;AAAiC,cAAA,KAAA,EAAA,eAAjC;AAAiC,cAAA,IAAA,EAAA;AAAjC,aADA;AAEA,wBAAA;AAFA;AADA,SAAA,CAPA,EAaA,CAAA,KAAA,EAAA;AACA,UAAA,KAAA,EAAA;AACA,oBAAA;AAAiC,cAAA,KAAA,EAAA,uBAAjC;AAAiC,cAAA,IAAA,EAAA;AAAjC,aADA;AAEA,wBAAA;AAFA;AADA,SAAA,CAbA,EAmBA;AACA,SAAA,gBAAA,EAA2B,CAAA,yBAAA,EAAA,eAAA,EAAA,yBAAA,CAA3B,CApBA,EAqBA,CAAA,GAAA,EAAA,QAAA,CArBA,EAsBA,CAAA,MAAA,EAAA;AACA,UAAA,KAAA,EAAA;AACA,uBAAA;AAAoC,cAAA,KAAA,EAAA,QAApC;AAAoC,cAAA,IAAA,EAAA;AAApC,aADA;AAEA,wBAAA;AAAqC,cAAA,KAAA,EAAA;AAArC;AAFA;AADA,SAAA,CAtBA,CArHA;AAkJA;AACA,QAAA,KAAA,EAAA,CACA,CAAA,UAAA,EAAA;AACA,UAAA,KAAA,EAAA;AACA,oBAAA;AAAiC,cAAA,KAAA,EAAA,iBAAjC;AAAiC,cAAA,IAAA,EAAA;AAAjC,aADA;AAEA,wBAAA;AAFA;AADA,SAAA,CADA,EAOA,CAAA,KAAA,EAAA;AACA,UAAA,KAAA,EAAA;AACA,oBAAA;AAAiC,cAAA,KAAA,EAAA,iBAAjC;AAAiC,cAAA,IAAA,EAAA;AAAjC,aADA;AAEA,wBAAA;AAFA;AADA,SAAA,CAPA,EAaA,CAAA,MAAA,EAAA;AACA,UAAA,KAAA,EAAA;AACA,uBAAA;AAAoC,cAAA,KAAA,EAAA,iBAApC;AAAoC,cAAA,IAAA,EAAA;AAApC,aADA;AAEA,wBAAA;AAAqC,cAAA,KAAA,EAAA;AAArC;AAFA;AADA,SAAA,CAbA;AAnJA;AArCO,KAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '//'\r\n    },\r\n    brackets: [['{', '}'], ['[', ']'], ['(', ')']],\r\n    autoClosingPairs: [\r\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\r\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\r\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\r\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\r\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\r\n    ],\r\n    folding: {\r\n        offSide: true\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.pug',\r\n    ignoreCase: true,\r\n    brackets: [\r\n        { token: 'delimiter.curly', open: '{', close: '}' },\r\n        { token: 'delimiter.array', open: '[', close: ']' },\r\n        { token: 'delimiter.parenthesis', open: '(', close: ')' }\r\n    ],\r\n    keywords: ['append', 'block', 'case', 'default', 'doctype', 'each', 'else', 'extends',\r\n        'for', 'if', 'in', 'include', 'mixin', 'typeof', 'unless', 'var', 'when'],\r\n    tags: [\r\n        'a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio',\r\n        'b', 'base', 'basefont', 'bdi', 'bdo', 'blockquote', 'body', 'br', 'button',\r\n        'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'command',\r\n        'datalist', 'dd', 'del', 'details', 'dfn', 'div', 'dl', 'dt',\r\n        'em', 'embed',\r\n        'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'frame', 'frameset',\r\n        'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html',\r\n        'i', 'iframe', 'img', 'input', 'ins',\r\n        'keygen', 'kbd',\r\n        'label', 'li', 'link',\r\n        'map', 'mark', 'menu', 'meta', 'meter',\r\n        'nav', 'noframes', 'noscript',\r\n        'object', 'ol', 'optgroup', 'option', 'output',\r\n        'p', 'param', 'pre', 'progress',\r\n        'q',\r\n        'rp', 'rt', 'ruby',\r\n        's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup',\r\n        'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'tracks', 'tt',\r\n        'u', 'ul',\r\n        'video',\r\n        'wbr'\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[\\+\\-\\*\\%\\&\\|\\!\\=\\/\\.\\,\\:]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    tokenizer: {\r\n        root: [\r\n            // Tag or a keyword at start\r\n            [/^(\\s*)([a-zA-Z_-][\\w-]*)/,\r\n                {\r\n                    cases: {\r\n                        '$2@tags': {\r\n                            cases: {\r\n                                '@eos': ['', 'tag'],\r\n                                '@default': ['', { token: 'tag', next: '@tag.$1' },]\r\n                            }\r\n                        },\r\n                        '$2@keywords': ['', { token: 'keyword.$2' },],\r\n                        '@default': ['', '',]\r\n                    }\r\n                }\r\n            ],\r\n            // id\r\n            [/^(\\s*)(#[a-zA-Z_-][\\w-]*)/, {\r\n                    cases: {\r\n                        '@eos': ['', 'tag.id'],\r\n                        '@default': ['', { token: 'tag.id', next: '@tag.$1' }]\r\n                    }\r\n                }],\r\n            // class\r\n            [/^(\\s*)(\\.[a-zA-Z_-][\\w-]*)/, {\r\n                    cases: {\r\n                        '@eos': ['', 'tag.class'],\r\n                        '@default': ['', { token: 'tag.class', next: '@tag.$1' }]\r\n                    }\r\n                }],\r\n            // plain text with pipe\r\n            [/^(\\s*)(\\|.*)$/, ''],\r\n            { include: '@whitespace' },\r\n            // keywords\r\n            [/[a-zA-Z_$][\\w$]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            // delimiters and operators\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/@symbols/, 'delimiter'],\r\n            // numbers\r\n            [/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n            [/\\d+/, 'number'],\r\n            // strings:\r\n            [/\"/, 'string', '@string.\"'],\r\n            [/'/, 'string', '@string.\\''],\r\n        ],\r\n        tag: [\r\n            [/(\\.)(\\s*$)/, [{ token: 'delimiter', next: '@blockText.$S2.' }, '']],\r\n            [/\\s+/, { token: '', next: '@simpleText' }],\r\n            // id\r\n            [/#[a-zA-Z_-][\\w-]*/, {\r\n                    cases: {\r\n                        '@eos': { token: 'tag.id', next: '@pop' },\r\n                        '@default': 'tag.id'\r\n                    }\r\n                }],\r\n            // class\r\n            [/\\.[a-zA-Z_-][\\w-]*/, {\r\n                    cases: {\r\n                        '@eos': { token: 'tag.class', next: '@pop' },\r\n                        '@default': 'tag.class'\r\n                    }\r\n                }],\r\n            // attributes\r\n            [/\\(/, { token: 'delimiter.parenthesis', next: '@attributeList' }],\r\n        ],\r\n        simpleText: [\r\n            [/[^#]+$/, { token: '', next: '@popall' }],\r\n            [/[^#]+/, { token: '' }],\r\n            // interpolation\r\n            [/(#{)([^}]*)(})/, {\r\n                    cases: {\r\n                        '@eos': ['interpolation.delimiter', 'interpolation', { token: 'interpolation.delimiter', next: '@popall' }],\r\n                        '@default': ['interpolation.delimiter', 'interpolation', 'interpolation.delimiter']\r\n                    }\r\n                }],\r\n            [/#$/, { token: '', next: '@popall' }],\r\n            [/#/, '']\r\n        ],\r\n        attributeList: [\r\n            [/\\s+/, ''],\r\n            [/(\\w+)(\\s*=\\s*)(\"|')/, ['attribute.name', 'delimiter', { token: 'attribute.value', next: '@value.$3' }]],\r\n            [/\\w+/, 'attribute.name'],\r\n            [/,/, {\r\n                    cases: {\r\n                        '@eos': { token: 'attribute.delimiter', next: '@popall' },\r\n                        '@default': 'attribute.delimiter'\r\n                    }\r\n                }],\r\n            [/\\)$/, { token: 'delimiter.parenthesis', next: '@popall' }],\r\n            [/\\)/, { token: 'delimiter.parenthesis', next: '@pop' }],\r\n        ],\r\n        whitespace: [\r\n            [/^(\\s*)(\\/\\/.*)$/, { token: 'comment', next: '@blockText.$1.comment' }],\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            [/<!--/, { token: 'comment', next: '@comment' }],\r\n        ],\r\n        blockText: [\r\n            [/^\\s+.*$/, {\r\n                    cases: {\r\n                        '($S2\\\\s+.*$)': { token: '$S3' },\r\n                        '@default': { token: '@rematch', next: '@popall' }\r\n                    }\r\n                }],\r\n            [/./, { token: '@rematch', next: '@popall' }]\r\n        ],\r\n        comment: [\r\n            [/[^<\\-]+/, 'comment.content'],\r\n            [/-->/, { token: 'comment', next: '@pop' }],\r\n            [/<!--/, 'comment.content.invalid'],\r\n            [/[<\\-]/, 'comment.content']\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"'#]+/, {\r\n                    cases: {\r\n                        '@eos': { token: 'string', next: '@popall' },\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n            [/@escapes/, {\r\n                    cases: {\r\n                        '@eos': { token: 'string.escape', next: '@popall' },\r\n                        '@default': 'string.escape'\r\n                    }\r\n                }],\r\n            [/\\\\./, {\r\n                    cases: {\r\n                        '@eos': { token: 'string.escape.invalid', next: '@popall' },\r\n                        '@default': 'string.escape.invalid'\r\n                    }\r\n                }],\r\n            // interpolation\r\n            [/(#{)([^}]*)(})/, ['interpolation.delimiter', 'interpolation', 'interpolation.delimiter']],\r\n            [/#/, 'string'],\r\n            [/[\"']/, {\r\n                    cases: {\r\n                        '$#==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': { token: 'string' }\r\n                    }\r\n                }],\r\n        ],\r\n        // Almost identical to above, except for escapes and the output token\r\n        value: [\r\n            [/[^\\\\\"']+/, {\r\n                    cases: {\r\n                        '@eos': { token: 'attribute.value', next: '@popall' },\r\n                        '@default': 'attribute.value'\r\n                    }\r\n                }],\r\n            [/\\\\./, {\r\n                    cases: {\r\n                        '@eos': { token: 'attribute.value', next: '@popall' },\r\n                        '@default': 'attribute.value'\r\n                    }\r\n                }],\r\n            [/[\"']/, {\r\n                    cases: {\r\n                        '$#==$S2': { token: 'attribute.value', next: '@pop' },\r\n                        '@default': { token: 'attribute.value' }\r\n                    }\r\n                }],\r\n        ],\r\n    },\r\n};\r\n"],"sourceRoot":"webpack:///","file":"pug-js-es5.js"}