{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/scheme/scheme.js"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,MAAA,EAAA,YAAA;AAAA,aAAA,IAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,UAAA,EAAA,YAAA;AAAA,aAAA,QAAA;AAAA,KAAA;AAAA;;;;;;AAKO,QAAA,IAAA,GAAA;AACP,MAAA,QAAA,EAAA;AACA,QAAA,WAAA,EAAA,GADA;AAEA,QAAA,YAAA,EAAA,CAAA,IAAA,EAAA,IAAA;AAFA,OADO;AAKP,MAAA,QAAA,EAAA,CAAA,CAAA,GAAA,EAAA,GAAA,CAAA,EAAA,CAAA,GAAA,EAA8B,GAA9B,CAAA,EAAmC,CAAA,GAAA,EAAA,GAAA,CAAnC,CALO;AAMP,MAAA,gBAAA,EAAA,CACA;AAAS,QAAA,IAAA,EAAA,GAAT;AAAkB,QAAA,KAAA,EAAA;AAAlB,OADA,EAEA;AAAS,QAAA,IAAA,EAAA,GAAT;AAAS,QAAA,KAAA,EAAA;AAAT,OAFA,EAGA;AAAS,QAAA,IAAA,EAAA,GAAT;AAAS,QAAA,KAAA,EAAA;AAAT,OAHA,EAIA;AAAS,QAAA,IAAA,EAAA,GAAT;AAAS,QAAA,KAAA,EAAA;AAAT,OAJA,CANO;AAYP,MAAA,gBAAA,EAAA,CACA;AAAS,QAAA,IAAA,EAAA,GAAT;AAAkB,QAAA,KAAA,EAAA;AAAlB,OADA,EAEA;AAAS,QAAA,IAAA,EAAA,GAAT;AAAS,QAAA,KAAA,EAAA;AAAT,OAFA,EAGA;AAAS,QAAA,IAAA,EAAA,GAAT;AAAS,QAAA,KAAA,EAAA;AAAT,OAHA,EAIA;AAAS,QAAA,IAAA,EAAA,GAAT;AAAS,QAAA,KAAA,EAAA;AAAT,OAJA;AAZO,KAAA;AAmBA,QAAA,QAAA,GAAA;AACP,MAAA,YAAA,EAAA,EADO;AAEP,MAAA,UAAA,EAAA,IAFO;AAGP,MAAA,YAAA,EAAA,SAHO;AAIP,MAAA,QAAA,EAAA,CACA;AAAS,QAAA,IAAA,EAAA,GAAT;AAAS,QAAA,KAAA,EAAA,GAAT;AAAS,QAAA,KAAA,EAAA;AAAT,OADA,EAEA;AAAS,QAAA,IAAA,EAAA,GAAT;AAAkB,QAAA,KAAA,EAAA,GAAlB;AAA8B,QAAA,KAAA,EAAA;AAA9B,OAFA,EAGA;AAAS,QAAA,IAAA,EAAA,GAAT;AAAS,QAAA,KAAA,EAAA,GAAT;AAAS,QAAA,KAAA,EAAA;AAAT,OAHA,CAJO;AASP,MAAA,QAAA,EAAA,CACA,MADA,EAEA,IAFA,EAGA,KAHA,EAIA,MAJA,EAKA,IALA,EAMA,MANA,EAOA,MAPA,EAQA,MARA,EASA,KATA,EAUA,KAVA,EAWA,MAXA,EAYA,QAZA,EAaA,SAbA,EAcA,cAdA,EAeA,QAfA,EAgBA,MAhBA,EAiBA,OAjBA,EAkBA,MAlBA,EAmBA,QAnBA,EAoBA,MApBA,EAqBA,OArBA,EAsBA,SAtBA,EAuBA,MAvBA,CATO;AAkCP,MAAA,SAAA,EAAA,CAAA,IAAA,EAAA,IAAA,CAlCO;AAmCP,MAAA,SAAA,EAAA,CAAA,KAAA,EAAA,MAAA,EAAA,QAAA,EAAA,KAAA,EAAA,IAAA,EAAA,KAAA,EAAA,OAAA,CAnCO;AAoCP,MAAA,SAAA,EAAA;AACA,QAAA,IAAA,EAAA,CACA,CAAA,uBAAA,EAAA,YAAA,CADA,EAEA,CAAA,0CAAA,EAAA,cAAA,CAFA,EAGA,CACA,wEADA,EAEA,CAAA,SAAA,EAAA,OAAA,EAAA,UAAA,CAFA,CAHA,EAOA;AAAa,UAAA,OAAA,EAAA;AAAb,SAPA,EAQA;AAAa,UAAA,OAAA,EAAA;AAAb,SARA,EASA,CACA,iCADA,EAEA;AACA,UAAA,KAAA,EAAA;AACA,yBAAA,SADA;AAEA,0BAAA,UAFA;AAGA,0BAAA,WAHA;AAIA,wBAAA;AAJA;AADA,SAFA,CATA,CADA;AAsBA,QAAA,OAAA,EAAA,CACA,CAAA,SAAA,EAAA,SAAA,CADA,EAEA,CAAA,KAAA,EAAA,SAAA,EAAA,OAAA,CAFA,EAGA,CAAA,KAAA,EAAA,SAAA,EAAA,MAAA,CAHA,EAIA,CAAA,OAAA,EAAA,SAAA,CAJA,CAtBA;AA4BA,QAAA,UAAA,EAAA,CACA,CAAA,YAAA,EAAA,OAAA,CADA,EAEA,CAAA,KAAA,EAAA,SAAA,EAAA,UAAA,CAFA,EAGA,CAAA,MAAA,EAAe,SAAf,CAHA,CA5BA;AAiCA,QAAA,OAAA,EAAA,CACA,CAAA,IAAA,EAAA,QAAA,EAAA,SAAA,CADA,EAEA,CAAA,QAAA,EAAA,QAAA,EAAA,kBAAA,CAFA,CAjCA;AAqCA,QAAA,eAAA,EAAA,CACA,CAAA,UAAA,EAAA,QAAA,EAAA,SAAA,CADA,EAEA,CAAA,SAAA,EAAA,QAAA,CAFA,EAGA,CAAA,KAAA,EAAA,eAAA,CAHA,EAIA,CAAA,GAAA,EAAA,QAAA,EAAA,SAAA,CAJA,EAKA,CAAA,KAAA,EAAA,QAAA,CALA;AArCA;AApCO,KAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: ';',\r\n        blockComment: ['#|', '|#'],\r\n    },\r\n    brackets: [['(', ')'], ['{', '}'], ['[', ']']],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n    ],\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    ignoreCase: true,\r\n    tokenPostfix: '.scheme',\r\n    brackets: [\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\r\n        { open: '{', close: '}', token: 'delimiter.curly' },\r\n        { open: '[', close: ']', token: 'delimiter.square' },\r\n    ],\r\n    keywords: [\r\n        'case',\r\n        'do',\r\n        'let',\r\n        'loop',\r\n        'if',\r\n        'else',\r\n        'when',\r\n        'cons',\r\n        'car',\r\n        'cdr',\r\n        'cond',\r\n        'lambda',\r\n        'lambda*',\r\n        'syntax-rules',\r\n        'format',\r\n        'set!',\r\n        'quote',\r\n        'eval',\r\n        'append',\r\n        'list',\r\n        'list?',\r\n        'member?',\r\n        'load',\r\n    ],\r\n    constants: ['#t', '#f'],\r\n    operators: ['eq?', 'eqv?', 'equal?', 'and', 'or', 'not', 'null?'],\r\n    tokenizer: {\r\n        root: [\r\n            [/#[xXoObB][0-9a-fA-F]+/, 'number.hex'],\r\n            [/[+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?/, 'number.float'],\r\n            [\r\n                /(?:\\b(?:(define|define-syntax|define-macro))\\b)(\\s+)((?:\\w|\\-|\\!|\\?)*)/,\r\n                ['keyword', 'white', 'variable'],\r\n            ],\r\n            { include: '@whitespace' },\r\n            { include: '@strings' },\r\n            [\r\n                /[a-zA-Z_#][a-zA-Z0-9_\\-\\?\\!\\*]*/,\r\n                {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@constants': 'constant',\r\n                        '@operators': 'operators',\r\n                        '@default': 'identifier',\r\n                    },\r\n                },\r\n            ],\r\n        ],\r\n        comment: [\r\n            [/[^\\|#]+/, 'comment'],\r\n            [/#\\|/, 'comment', '@push'],\r\n            [/\\|#/, 'comment', '@pop'],\r\n            [/[\\|#]/, 'comment'],\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, 'white'],\r\n            [/#\\|/, 'comment', '@comment'],\r\n            [/;.*$/, 'comment'],\r\n        ],\r\n        strings: [\r\n            [/\"$/, 'string', '@popall'],\r\n            [/\"(?=.)/, 'string', '@multiLineString'],\r\n        ],\r\n        multiLineString: [\r\n            [/[^\\\\\"]+$/, 'string', '@popall'],\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/\\\\./, 'string.escape'],\r\n            [/\"/, 'string', '@popall'],\r\n            [/\\\\$/, 'string']\r\n        ],\r\n    },\r\n};\r\n"],"sourceRoot":"webpack:///","file":"scheme-js-es5.js"}