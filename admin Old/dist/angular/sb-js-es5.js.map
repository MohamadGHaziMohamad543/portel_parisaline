{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/sb/sb.js"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '\\'',\r\n    },\r\n    brackets: [\r\n        ['(', ')'], ['[', ']'],\r\n        ['If', 'EndIf'],\r\n        ['While', 'EndWhile'],\r\n        ['For', 'EndFor'],\r\n        ['Sub', 'EndSub']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\r\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\r\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\r\n    ]\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.sb',\r\n    ignoreCase: true,\r\n    brackets: [\r\n        { token: 'delimiter.array', open: '[', close: ']' },\r\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\r\n        // Special bracket statement pairs\r\n        { token: 'keyword.tag-if', open: 'If', close: 'EndIf' },\r\n        { token: 'keyword.tag-while', open: 'While', close: 'EndWhile' },\r\n        { token: 'keyword.tag-for', open: 'For', close: 'EndFor' },\r\n        { token: 'keyword.tag-sub', open: 'Sub', close: 'EndSub' },\r\n    ],\r\n    keywords: [\r\n        'Else', 'ElseIf', 'EndFor', 'EndIf', 'EndSub', 'EndWhile',\r\n        'For', 'Goto', 'If', 'Step', 'Sub', 'Then', 'To', 'While'\r\n    ],\r\n    tagwords: [\r\n        'If', 'Sub', 'While', 'For'\r\n    ],\r\n    operators: ['>', '<', '<>', '<=', '>=', 'And', 'Or', '+', '-', '*', '/', '='],\r\n    // we include these common regular expressions\r\n    identifier: /[a-zA-Z_][\\w]*/,\r\n    symbols: /[=><:+\\-*\\/%\\.,]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // classes\r\n            [/(@identifier)(?=[.])/, 'type'],\r\n            // identifiers, tagwords, and keywords\r\n            [/@identifier/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@operators': 'operator',\r\n                        '@default': 'variable.name'\r\n                    }\r\n                }],\r\n            // methods, properties, and events\r\n            [/([.])(@identifier)/, {\r\n                    cases: {\r\n                        '$2': ['delimiter', 'type.member'],\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            // numbers\r\n            [/\\d*\\.\\d+/, 'number.float'],\r\n            [/\\d+/, 'number'],\r\n            // delimiters and operators\r\n            [/[()\\[\\]]/, '@brackets'],\r\n            [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'operator',\r\n                        '@default': 'delimiter'\r\n                    }\r\n                }],\r\n            // strings\r\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/\"/, 'string', '@string'],\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            [/(\\').*$/, 'comment']\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"C?/, 'string', '@pop']\r\n        ],\r\n    },\r\n};\r\n"],"sourceRoot":"webpack:///","file":"sb-js-es5.js"}