{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/perl/perl.js"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n*  Copyright (c) Microsoft Corporation. All rights reserved.\r\n*  Licensed under the MIT License. See License.txt in the project root for license information.\r\n*--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '#',\r\n    },\r\n    brackets: [['{', '}'], ['[', ']'], ['(', ')']],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" },\r\n        { open: '`', close: '`' },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" },\r\n        { open: '`', close: '`' },\r\n    ],\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.perl',\r\n    brackets: [\r\n        { token: 'delimiter.bracket', open: '{', close: '}' },\r\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\r\n        { token: 'delimiter.square', open: '[', close: ']' },\r\n    ],\r\n    // https://learn.perl.org/docs/keywords.html\r\n    // Perl syntax\r\n    keywords: [\r\n        '__DATA__',\r\n        'else',\r\n        'lock',\r\n        '__END__',\r\n        'elsif',\r\n        'lt',\r\n        '__FILE__',\r\n        'eq',\r\n        '__LINE__',\r\n        'exp',\r\n        'ne',\r\n        'sub',\r\n        '__PACKAGE__',\r\n        'for',\r\n        'no',\r\n        'and',\r\n        'foreach',\r\n        'or',\r\n        'unless',\r\n        'cmp',\r\n        'ge',\r\n        'package',\r\n        'until',\r\n        'continue',\r\n        'gt',\r\n        'while',\r\n        'CORE',\r\n        'if',\r\n        'xor',\r\n        'do',\r\n        'le',\r\n        '__DIE__',\r\n        '__WARN__',\r\n    ],\r\n    // Perl functions\r\n    builtinFunctions: [\r\n        '-A',\r\n        'END',\r\n        'length',\r\n        'setpgrp',\r\n        '-B',\r\n        'endgrent',\r\n        'link',\r\n        'setpriority',\r\n        '-b',\r\n        'endhostent',\r\n        'listen',\r\n        'setprotoent',\r\n        '-C',\r\n        'endnetent',\r\n        'local',\r\n        'setpwent',\r\n        '-c',\r\n        'endprotoent',\r\n        'localtime',\r\n        'setservent',\r\n        '-d',\r\n        'endpwent',\r\n        'log',\r\n        'setsockopt',\r\n        '-e',\r\n        'endservent',\r\n        'lstat',\r\n        'shift',\r\n        '-f',\r\n        'eof',\r\n        'map',\r\n        'shmctl',\r\n        '-g',\r\n        'eval',\r\n        'mkdir',\r\n        'shmget',\r\n        '-k',\r\n        'exec',\r\n        'msgctl',\r\n        'shmread',\r\n        '-l',\r\n        'exists',\r\n        'msgget',\r\n        'shmwrite',\r\n        '-M',\r\n        'exit',\r\n        'msgrcv',\r\n        'shutdown',\r\n        '-O',\r\n        'fcntl',\r\n        'msgsnd',\r\n        'sin',\r\n        '-o',\r\n        'fileno',\r\n        'my',\r\n        'sleep',\r\n        '-p',\r\n        'flock',\r\n        'next',\r\n        'socket',\r\n        '-r',\r\n        'fork',\r\n        'not',\r\n        'socketpair',\r\n        '-R',\r\n        'format',\r\n        'oct',\r\n        'sort',\r\n        '-S',\r\n        'formline',\r\n        'open',\r\n        'splice',\r\n        '-s',\r\n        'getc',\r\n        'opendir',\r\n        'split',\r\n        '-T',\r\n        'getgrent',\r\n        'ord',\r\n        'sprintf',\r\n        '-t',\r\n        'getgrgid',\r\n        'our',\r\n        'sqrt',\r\n        '-u',\r\n        'getgrnam',\r\n        'pack',\r\n        'srand',\r\n        '-w',\r\n        'gethostbyaddr',\r\n        'pipe',\r\n        'stat',\r\n        '-W',\r\n        'gethostbyname',\r\n        'pop',\r\n        'state',\r\n        '-X',\r\n        'gethostent',\r\n        'pos',\r\n        'study',\r\n        '-x',\r\n        'getlogin',\r\n        'print',\r\n        'substr',\r\n        '-z',\r\n        'getnetbyaddr',\r\n        'printf',\r\n        'symlink',\r\n        'abs',\r\n        'getnetbyname',\r\n        'prototype',\r\n        'syscall',\r\n        'accept',\r\n        'getnetent',\r\n        'push',\r\n        'sysopen',\r\n        'alarm',\r\n        'getpeername',\r\n        'quotemeta',\r\n        'sysread',\r\n        'atan2',\r\n        'getpgrp',\r\n        'rand',\r\n        'sysseek',\r\n        'AUTOLOAD',\r\n        'getppid',\r\n        'read',\r\n        'system',\r\n        'BEGIN',\r\n        'getpriority',\r\n        'readdir',\r\n        'syswrite',\r\n        'bind',\r\n        'getprotobyname',\r\n        'readline',\r\n        'tell',\r\n        'binmode',\r\n        'getprotobynumber',\r\n        'readlink',\r\n        'telldir',\r\n        'bless',\r\n        'getprotoent',\r\n        'readpipe',\r\n        'tie',\r\n        'break',\r\n        'getpwent',\r\n        'recv',\r\n        'tied',\r\n        'caller',\r\n        'getpwnam',\r\n        'redo',\r\n        'time',\r\n        'chdir',\r\n        'getpwuid',\r\n        'ref',\r\n        'times',\r\n        'CHECK',\r\n        'getservbyname',\r\n        'rename',\r\n        'truncate',\r\n        'chmod',\r\n        'getservbyport',\r\n        'require',\r\n        'uc',\r\n        'chomp',\r\n        'getservent',\r\n        'reset',\r\n        'ucfirst',\r\n        'chop',\r\n        'getsockname',\r\n        'return',\r\n        'umask',\r\n        'chown',\r\n        'getsockopt',\r\n        'reverse',\r\n        'undef',\r\n        'chr',\r\n        'glob',\r\n        'rewinddir',\r\n        'UNITCHECK',\r\n        'chroot',\r\n        'gmtime',\r\n        'rindex',\r\n        'unlink',\r\n        'close',\r\n        'goto',\r\n        'rmdir',\r\n        'unpack',\r\n        'closedir',\r\n        'grep',\r\n        'say',\r\n        'unshift',\r\n        'connect',\r\n        'hex',\r\n        'scalar',\r\n        'untie',\r\n        'cos',\r\n        'index',\r\n        'seek',\r\n        'use',\r\n        'crypt',\r\n        'INIT',\r\n        'seekdir',\r\n        'utime',\r\n        'dbmclose',\r\n        'int',\r\n        'select',\r\n        'values',\r\n        'dbmopen',\r\n        'ioctl',\r\n        'semctl',\r\n        'vec',\r\n        'defined',\r\n        'join',\r\n        'semget',\r\n        'wait',\r\n        'delete',\r\n        'keys',\r\n        'semop',\r\n        'waitpid',\r\n        'DESTROY',\r\n        'kill',\r\n        'send',\r\n        'wantarray',\r\n        'die',\r\n        'last',\r\n        'setgrent',\r\n        'warn',\r\n        'dump',\r\n        'lc',\r\n        'sethostent',\r\n        'write',\r\n        'each',\r\n        'lcfirst',\r\n        'setnetent',\r\n    ],\r\n    // File handlers\r\n    builtinFileHandlers: ['ARGV', 'STDERR', 'STDOUT', 'ARGVOUT', 'STDIN', 'ENV'],\r\n    // Perl variables\r\n    builtinVariables: [\r\n        '$!',\r\n        '$^RE_TRIE_MAXBUF',\r\n        '$LAST_REGEXP_CODE_RESULT',\r\n        '$\"',\r\n        '$^S',\r\n        '$LIST_SEPARATOR',\r\n        '$#',\r\n        '$^T',\r\n        '$MATCH',\r\n        '$$',\r\n        '$^TAINT',\r\n        '$MULTILINE_MATCHING',\r\n        '$%',\r\n        '$^UNICODE',\r\n        '$NR',\r\n        '$&',\r\n        '$^UTF8LOCALE',\r\n        '$OFMT',\r\n        \"$'\",\r\n        '$^V',\r\n        '$OFS',\r\n        '$(',\r\n        '$^W',\r\n        '$ORS',\r\n        '$)',\r\n        '$^WARNING_BITS',\r\n        '$OS_ERROR',\r\n        '$*',\r\n        '$^WIDE_SYSTEM_CALLS',\r\n        '$OSNAME',\r\n        '$+',\r\n        '$^X',\r\n        '$OUTPUT_AUTO_FLUSH',\r\n        '$,',\r\n        '$_',\r\n        '$OUTPUT_FIELD_SEPARATOR',\r\n        '$-',\r\n        '$`',\r\n        '$OUTPUT_RECORD_SEPARATOR',\r\n        '$.',\r\n        '$a',\r\n        '$PERL_VERSION',\r\n        '$/',\r\n        '$ACCUMULATOR',\r\n        '$PERLDB',\r\n        '$0',\r\n        '$ARG',\r\n        '$PID',\r\n        '$:',\r\n        '$ARGV',\r\n        '$POSTMATCH',\r\n        '$;',\r\n        '$b',\r\n        '$PREMATCH',\r\n        '$<',\r\n        '$BASETIME',\r\n        '$PROCESS_ID',\r\n        '$=',\r\n        '$CHILD_ERROR',\r\n        '$PROGRAM_NAME',\r\n        '$>',\r\n        '$COMPILING',\r\n        '$REAL_GROUP_ID',\r\n        '$?',\r\n        '$DEBUGGING',\r\n        '$REAL_USER_ID',\r\n        '$@',\r\n        '$EFFECTIVE_GROUP_ID',\r\n        '$RS',\r\n        '$[',\r\n        '$EFFECTIVE_USER_ID',\r\n        '$SUBSCRIPT_SEPARATOR',\r\n        '$\\\\',\r\n        '$EGID',\r\n        '$SUBSEP',\r\n        '$]',\r\n        '$ERRNO',\r\n        '$SYSTEM_FD_MAX',\r\n        '$^',\r\n        '$EUID',\r\n        '$UID',\r\n        '$^A',\r\n        '$EVAL_ERROR',\r\n        '$WARNING',\r\n        '$^C',\r\n        '$EXCEPTIONS_BEING_CAUGHT',\r\n        '$|',\r\n        '$^CHILD_ERROR_NATIVE',\r\n        '$EXECUTABLE_NAME',\r\n        '$~',\r\n        '$^D',\r\n        '$EXTENDED_OS_ERROR',\r\n        '%!',\r\n        '$^E',\r\n        '$FORMAT_FORMFEED',\r\n        '%^H',\r\n        '$^ENCODING',\r\n        '$FORMAT_LINE_BREAK_CHARACTERS',\r\n        '%ENV',\r\n        '$^F',\r\n        '$FORMAT_LINES_LEFT',\r\n        '%INC',\r\n        '$^H',\r\n        '$FORMAT_LINES_PER_PAGE',\r\n        '%OVERLOAD',\r\n        '$^I',\r\n        '$FORMAT_NAME',\r\n        '%SIG',\r\n        '$^L',\r\n        '$FORMAT_PAGE_NUMBER',\r\n        '@+',\r\n        '$^M',\r\n        '$FORMAT_TOP_NAME',\r\n        '@-',\r\n        '$^N',\r\n        '$GID',\r\n        '@_',\r\n        '$^O',\r\n        '$INPLACE_EDIT',\r\n        '@ARGV',\r\n        '$^OPEN',\r\n        '$INPUT_LINE_NUMBER',\r\n        '@INC',\r\n        '$^P',\r\n        '$INPUT_RECORD_SEPARATOR',\r\n        '@LAST_MATCH_START',\r\n        '$^R',\r\n        '$LAST_MATCH_END',\r\n        '$^RE_DEBUG_FLAGS',\r\n        '$LAST_PAREN_MATCH',\r\n    ],\r\n    // operators\r\n    symbols: /[:+\\-\\^*$&%@=<>!?|\\/~\\.]/,\r\n    quoteLikeOps: ['qr', 'm', 's', 'q', 'qq', 'qx', 'qw', 'tr', 'y'],\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            { include: '@whitespace' },\r\n            [\r\n                /[a-zA-Z\\-_][\\w\\-_]*/,\r\n                {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@builtinFunctions': 'type.identifier',\r\n                        '@builtinFileHandlers': 'variable.predefined',\r\n                        '@quoteLikeOps': { token: '@rematch', next: 'quotedConstructs' },\r\n                        '@default': '',\r\n                    },\r\n                },\r\n            ],\r\n            // Perl variables\r\n            [\r\n                /[\\$@%][*@#?\\+\\-\\$!\\w\\\\\\^><~:;\\.]+/,\r\n                {\r\n                    cases: {\r\n                        '@builtinVariables': 'variable.predefined',\r\n                        '@default': 'variable',\r\n                    },\r\n                },\r\n            ],\r\n            { include: '@strings' },\r\n            { include: '@dblStrings' },\r\n            // Perl Doc\r\n            { include: '@perldoc' },\r\n            // Here Doc\r\n            { include: '@heredoc' },\r\n            [/[{}\\[\\]()]/, '@brackets'],\r\n            // RegExp\r\n            [\r\n                /[\\/](?:(?:\\[(?:\\\\]|[^\\]])+\\])|(?:\\\\\\/|[^\\]\\/]))*[\\/]\\w*\\s*(?=[).,;]|$)/,\r\n                'regexp',\r\n            ],\r\n            [/@symbols/, 'operators'],\r\n            { include: '@numbers' },\r\n            [/[,;]/, 'delimiter'],\r\n        ],\r\n        whitespace: [\r\n            [/\\s+/, 'white'],\r\n            [/(^#!.*$)/, 'metatag'],\r\n            [/(^#.*$)/, 'comment'],\r\n        ],\r\n        numbers: [\r\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n            [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'],\r\n            [/\\d+/, 'number'],\r\n        ],\r\n        // Single quote string\r\n        strings: [[/'/, 'string', '@stringBody']],\r\n        stringBody: [\r\n            [/'/, 'string', '@popall'],\r\n            [/\\\\'/, 'string.escape'],\r\n            [/./, 'string'],\r\n        ],\r\n        // Double quote string\r\n        dblStrings: [[/\"/, 'string', '@dblStringBody']],\r\n        dblStringBody: [\r\n            [/\"/, 'string', '@popall'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            { include: '@variables' },\r\n            [/./, 'string'],\r\n        ],\r\n        // Quoted constructs\r\n        // Percent strings in Ruby are similar to quote-like operators in Perl.\r\n        // This is adapted from pstrings in ../ruby/ruby.ts.\r\n        quotedConstructs: [\r\n            [/(q|qw|tr|y)\\s*\\(/, { token: 'string.delim', switchTo: '@qstring.(.)' }],\r\n            [/(q|qw|tr|y)\\s*\\[/, { token: 'string.delim', switchTo: '@qstring.[.]' }],\r\n            [/(q|qw|tr|y)\\s*\\{/, { token: 'string.delim', switchTo: '@qstring.{.}' }],\r\n            [/(q|qw|tr|y)\\s*</, { token: 'string.delim', switchTo: '@qstring.<.>' }],\r\n            [/(q|qw|tr|y)#/, { token: 'string.delim', switchTo: '@qstring.#.#' }],\r\n            [/(q|qw|tr|y)\\s*([^A-Za-z0-9#\\s])/, { token: 'string.delim', switchTo: '@qstring.$2.$2' }],\r\n            [/(q|qw|tr|y)\\s+(\\w)/, { token: 'string.delim', switchTo: '@qstring.$2.$2' }],\r\n            [/(qr|m|s)\\s*\\(/, { token: 'regexp.delim', switchTo: '@qregexp.(.)' }],\r\n            [/(qr|m|s)\\s*\\[/, { token: 'regexp.delim', switchTo: '@qregexp.[.]' }],\r\n            [/(qr|m|s)\\s*\\{/, { token: 'regexp.delim', switchTo: '@qregexp.{.}' }],\r\n            [/(qr|m|s)\\s*</, { token: 'regexp.delim', switchTo: '@qregexp.<.>' }],\r\n            [/(qr|m|s)#/, { token: 'regexp.delim', switchTo: '@qregexp.#.#' }],\r\n            [/(qr|m|s)\\s*([^A-Za-z0-9_#\\s])/, { token: 'regexp.delim', switchTo: '@qregexp.$2.$2' }],\r\n            [/(qr|m|s)\\s+(\\w)/, { token: 'regexp.delim', switchTo: '@qregexp.$2.$2' }],\r\n            [/(qq|qx)\\s*\\(/, { token: 'string.delim', switchTo: '@qqstring.(.)' }],\r\n            [/(qq|qx)\\s*\\[/, { token: 'string.delim', switchTo: '@qqstring.[.]' }],\r\n            [/(qq|qx)\\s*\\{/, { token: 'string.delim', switchTo: '@qqstring.{.}' }],\r\n            [/(qq|qx)\\s*</, { token: 'string.delim', switchTo: '@qqstring.<.>' }],\r\n            [/(qq|qx)#/, { token: 'string.delim', switchTo: '@qqstring.#.#' }],\r\n            [/(qq|qx)\\s*([^A-Za-z0-9#\\s])/, { token: 'string.delim', switchTo: '@qqstring.$2.$2' }],\r\n            [/(qq|qx)\\s+(\\w)/, { token: 'string.delim', switchTo: '@qqstring.$2.$2' }],\r\n        ],\r\n        // Non-expanded quoted string\r\n        // qstring<open>.<close>\r\n        //  open = open delimiter\r\n        //  close = close delimiter\r\n        qstring: [\r\n            [/\\\\./, 'string.escape'],\r\n            [/./, {\r\n                    cases: {\r\n                        '$#==$S3': { token: 'string.delim', next: '@pop' },\r\n                        '$#==$S2': { token: 'string.delim', next: '@push' },\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n        ],\r\n        // Quoted regexp\r\n        // qregexp.<open>.<close>\r\n        //  open = open delimiter\r\n        //  close = close delimiter\r\n        qregexp: [\r\n            { include: '@variables' },\r\n            [/\\\\./, 'regexp.escape'],\r\n            [/./, {\r\n                    cases: {\r\n                        '$#==$S3': { token: 'regexp.delim', next: '@regexpModifiers' },\r\n                        '$#==$S2': { token: 'regexp.delim', next: '@push' },\r\n                        '@default': 'regexp'\r\n                    }\r\n                }],\r\n        ],\r\n        regexpModifiers: [\r\n            [/[msixpodualngcer]+/, { token: 'regexp.modifier', next: '@popall' }],\r\n        ],\r\n        // Expanded quoted string\r\n        // qqstring.<open>.<close>\r\n        //  open = open delimiter\r\n        //  close = close delimiter\r\n        qqstring: [\r\n            { include: '@variables' },\r\n            { include: '@qstring' },\r\n        ],\r\n        heredoc: [\r\n            [\r\n                /<<\\s*['\"`]?([\\w\\-]+)['\"`]?/,\r\n                { token: 'string.heredoc.delimiter', next: '@heredocBody.$1' },\r\n            ],\r\n        ],\r\n        heredocBody: [\r\n            [\r\n                /^([\\w\\-]+)$/,\r\n                {\r\n                    cases: {\r\n                        '$1==$S2': [{ token: 'string.heredoc.delimiter', next: '@popall' }],\r\n                        '@default': 'string.heredoc',\r\n                    },\r\n                },\r\n            ],\r\n            [/./, 'string.heredoc'],\r\n        ],\r\n        perldoc: [[/^=\\w/, 'comment.doc', '@perldocBody']],\r\n        perldocBody: [\r\n            [/^=cut\\b/, 'type.identifier', '@popall'],\r\n            [/./, 'comment.doc'],\r\n        ],\r\n        variables: [\r\n            [/\\$\\w+/, 'variable'],\r\n            [/@\\w+/, 'variable'],\r\n            [/%\\w+/, 'variable'],\r\n        ],\r\n    },\r\n};\r\n"],"sourceRoot":"webpack:///","file":"perl-js-es5.js"}