{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/swift/swift.js"],"names":[],"mappings":"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","sourcesContent":["/*!---------------------------------------------------------------------------------------------\r\n *  Copyright (C) David Owens II, owensd.io. All rights reserved.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['/*', '*/'],\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n        { open: '`', close: '`' },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n        { open: '`', close: '`' },\r\n    ]\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.swift',\r\n    // TODO(owensd): Support the full range of unicode valid identifiers.\r\n    identifier: /[a-zA-Z_][\\w$]*/,\r\n    // TODO(owensd): Support the @availability macro properly.\r\n    attributes: [\r\n        '@autoclosure', '@noescape', '@noreturn', '@NSApplicationMain', '@NSCopying', '@NSManaged',\r\n        '@objc', '@UIApplicationMain', '@noreturn', '@availability', '@IBAction', '@IBDesignable', '@IBInspectable', '@IBOutlet'\r\n    ],\r\n    accessmodifiers: ['public', 'private', 'internal'],\r\n    keywords: [\r\n        '__COLUMN__', '__FILE__', '__FUNCTION__', '__LINE__', 'as', 'as!', 'as?', 'associativity', 'break', 'case', 'catch',\r\n        'class', 'continue', 'convenience', 'default', 'deinit', 'didSet', 'do', 'dynamic', 'dynamicType',\r\n        'else', 'enum', 'extension', 'fallthrough', 'final', 'for', 'func', 'get', 'guard', 'if', 'import', 'in', 'infix',\r\n        'init', 'inout', 'internal', 'is', 'lazy', 'left', 'let', 'mutating', 'nil', 'none', 'nonmutating', 'operator',\r\n        'optional', 'override', 'postfix', 'precedence', 'prefix', 'private', 'protocol', 'Protocol', 'public',\r\n        'repeat', 'required', 'return', 'right', 'self', 'Self', 'set', 'static', 'struct', 'subscript', 'super', 'switch',\r\n        'throw', 'throws', 'try', 'try!', 'Type', 'typealias', 'unowned', 'var', 'weak', 'where', 'while', 'willSet', 'FALSE', 'TRUE'\r\n    ],\r\n    symbols: /[=(){}\\[\\].,:;@#\\_&\\-<>`?!+*\\\\\\/]/,\r\n    // Moved . to operatorstart so it can be a delimiter\r\n    operatorstart: /[\\/=\\-+!*%<>&|^~?\\u00A1-\\u00A7\\u00A9\\u00AB\\u00AC\\u00AE\\u00B0-\\u00B1\\u00B6\\u00BB\\u00BF\\u00D7\\u00F7\\u2016-\\u2017\\u2020-\\u2027\\u2030-\\u203E\\u2041-\\u2053\\u2055-\\u205E\\u2190-\\u23FF\\u2500-\\u2775\\u2794-\\u2BFF\\u2E00-\\u2E7F\\u3001-\\u3003\\u3008-\\u3030]/,\r\n    operatorend: /[\\u0300-\\u036F\\u1DC0-\\u1DFF\\u20D0-\\u20FF\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uE0100-\\uE01EF]/,\r\n    operators: /(@operatorstart)((@operatorstart)|(@operatorend))*/,\r\n    // TODO(owensd): These are borrowed from C#; need to validate correctness for Swift.\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    tokenizer: {\r\n        root: [\r\n            { include: '@whitespace' },\r\n            { include: '@comment' },\r\n            { include: '@attribute' },\r\n            { include: '@literal' },\r\n            { include: '@keyword' },\r\n            { include: '@invokedmethod' },\r\n            { include: '@symbol' },\r\n        ],\r\n        whitespace: [\r\n            [/\\s+/, 'white'],\r\n            [/\"\"\"/, 'string.quote', '@endDblDocString']\r\n        ],\r\n        endDblDocString: [\r\n            [/[^\"]+/, 'string'],\r\n            [/\\\\\"/, 'string'],\r\n            [/\"\"\"/, 'string.quote', '@popall'],\r\n            [/\"/, 'string']\r\n        ],\r\n        symbol: [\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/[<>](?!@symbols)/, '@brackets'],\r\n            [/[.]/, 'delimiter'],\r\n            [/@operators/, 'operator'],\r\n            [/@symbols/, 'operator']\r\n        ],\r\n        comment: [\r\n            [/\\/\\/\\/.*$/, 'comment.doc'],\r\n            [/\\/\\*\\*/, 'comment.doc', '@commentdocbody'],\r\n            [/\\/\\/.*$/, 'comment'],\r\n            [/\\/\\*/, 'comment', '@commentbody']\r\n        ],\r\n        commentdocbody: [\r\n            [/\\/\\*/, 'comment', '@commentbody'],\r\n            [/\\*\\//, 'comment.doc', '@pop'],\r\n            [/\\:[a-zA-Z]+\\:/, 'comment.doc.param'],\r\n            [/./, 'comment.doc']\r\n        ],\r\n        commentbody: [\r\n            [/\\/\\*/, 'comment', '@commentbody'],\r\n            [/\\*\\//, 'comment', '@pop'],\r\n            [/./, 'comment']\r\n        ],\r\n        attribute: [\r\n            [/\\@@identifier/, {\r\n                    cases: {\r\n                        '@attributes': 'keyword.control',\r\n                        '@default': ''\r\n                    }\r\n                }]\r\n        ],\r\n        literal: [\r\n            [/\"/, { token: 'string.quote', next: '@stringlit' }],\r\n            [/0[b]([01]_?)+/, 'number.binary'],\r\n            [/0[o]([0-7]_?)+/, 'number.octal'],\r\n            [/0[x]([0-9a-fA-F]_?)+([pP][\\-+](\\d_?)+)?/, 'number.hex'],\r\n            [/(\\d_?)*\\.(\\d_?)+([eE][\\-+]?(\\d_?)+)?/, 'number.float'],\r\n            [/(\\d_?)+/, 'number']\r\n        ],\r\n        stringlit: [\r\n            [/\\\\\\(/, { token: 'operator', next: '@interpolatedexpression' }],\r\n            [/@escapes/, 'string'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"/, { token: 'string.quote', next: '@pop' }],\r\n            [/./, 'string']\r\n        ],\r\n        interpolatedexpression: [\r\n            [/\\(/, { token: 'operator', next: '@interpolatedexpression' }],\r\n            [/\\)/, { token: 'operator', next: '@pop' }],\r\n            { include: '@literal' },\r\n            { include: '@keyword' },\r\n            { include: '@symbol' }\r\n        ],\r\n        keyword: [\r\n            [/`/, { token: 'operator', next: '@escapedkeyword' }],\r\n            [/@identifier/, {\r\n                    cases: {\r\n                        '@keywords': 'keyword', '[A-Z][\\a-zA-Z0-9$]*': 'type.identifier',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }]\r\n        ],\r\n        escapedkeyword: [\r\n            [/`/, { token: 'operator', next: '@pop' }],\r\n            [/./, 'identifier']\r\n        ],\r\n        //\t\tsymbol: [\r\n        //\t\t\t[ /@symbols/, 'operator' ],\r\n        //\t\t\t[ /@operators/, 'operator' ]\r\n        //\t\t],\r\n        invokedmethod: [\r\n            [/([.])(@identifier)/, {\r\n                    cases: {\r\n                        '$2': ['delimeter', 'type.identifier'],\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n        ]\r\n    }\r\n};\r\n"],"sourceRoot":"webpack:///","file":"swift-js-es5.js"}