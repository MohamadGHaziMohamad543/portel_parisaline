{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/shell/shell.js"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n*  Copyright (c) Microsoft Corporation. All rights reserved.\r\n*  Licensed under the MIT License. See License.txt in the project root for license information.\r\n*--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '#',\r\n    },\r\n    brackets: [['{', '}'], ['[', ']'], ['(', ')']],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" },\r\n        { open: '`', close: '`' },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" },\r\n        { open: '`', close: '`' },\r\n    ],\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    ignoreCase: true,\r\n    tokenPostfix: '.shell',\r\n    brackets: [\r\n        { token: 'delimiter.bracket', open: '{', close: '}' },\r\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\r\n        { token: 'delimiter.square', open: '[', close: ']' },\r\n    ],\r\n    keywords: [\r\n        'if',\r\n        'then',\r\n        'do',\r\n        'else',\r\n        'elif',\r\n        'while',\r\n        'until',\r\n        'for',\r\n        'in',\r\n        'esac',\r\n        'fi',\r\n        'fin',\r\n        'fil',\r\n        'done',\r\n        'exit',\r\n        'set',\r\n        'unset',\r\n        'export',\r\n        'function',\r\n    ],\r\n    builtins: [\r\n        'ab',\r\n        'awk',\r\n        'bash',\r\n        'beep',\r\n        'cat',\r\n        'cc',\r\n        'cd',\r\n        'chown',\r\n        'chmod',\r\n        'chroot',\r\n        'clear',\r\n        'cp',\r\n        'curl',\r\n        'cut',\r\n        'diff',\r\n        'echo',\r\n        'find',\r\n        'gawk',\r\n        'gcc',\r\n        'get',\r\n        'git',\r\n        'grep',\r\n        'hg',\r\n        'kill',\r\n        'killall',\r\n        'ln',\r\n        'ls',\r\n        'make',\r\n        'mkdir',\r\n        'openssl',\r\n        'mv',\r\n        'nc',\r\n        'node',\r\n        'npm',\r\n        'ping',\r\n        'ps',\r\n        'restart',\r\n        'rm',\r\n        'rmdir',\r\n        'sed',\r\n        'service',\r\n        'sh',\r\n        'shopt',\r\n        'shred',\r\n        'source',\r\n        'sort',\r\n        'sleep',\r\n        'ssh',\r\n        'start',\r\n        'stop',\r\n        'su',\r\n        'sudo',\r\n        'svn',\r\n        'tee',\r\n        'telnet',\r\n        'top',\r\n        'touch',\r\n        'vi',\r\n        'vim',\r\n        'wall',\r\n        'wc',\r\n        'wget',\r\n        'who',\r\n        'write',\r\n        'yes',\r\n        'zsh',\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[=><!~?&|+\\-*\\/\\^;\\.,]+/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            { include: '@whitespace' },\r\n            [\r\n                /[a-zA-Z]\\w*/,\r\n                {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@builtins': 'type.identifier',\r\n                        '@default': ''\r\n                    },\r\n                },\r\n            ],\r\n            { include: '@strings' },\r\n            { include: '@parameters' },\r\n            { include: '@heredoc' },\r\n            [/[{}\\[\\]()]/, '@brackets'],\r\n            [/-+\\w+/, 'attribute.name'],\r\n            [/@symbols/, 'delimiter'],\r\n            { include: '@numbers' },\r\n            [/[,;]/, 'delimiter'],\r\n        ],\r\n        whitespace: [\r\n            [/\\s+/, 'white'],\r\n            [/(^#!.*$)/, 'metatag'],\r\n            [/(^#.*$)/, 'comment'],\r\n        ],\r\n        numbers: [\r\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n            [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'],\r\n            [/\\d+/, 'number'],\r\n        ],\r\n        // Recognize strings, including those broken across lines\r\n        strings: [\r\n            [/'/, 'string', '@stringBody'],\r\n            [/\"/, 'string', '@dblStringBody']\r\n        ],\r\n        stringBody: [\r\n            [/'/, 'string', '@popall'],\r\n            [/./, 'string'],\r\n        ],\r\n        dblStringBody: [\r\n            [/\"/, 'string', '@popall'],\r\n            [/./, 'string'],\r\n        ],\r\n        heredoc: [\r\n            [/(<<[-<]?)(\\s*)(['\"`]?)([\\w\\-]+)(['\"`]?)/, ['constants', 'white', 'string.heredoc.delimiter', 'string.heredoc', 'string.heredoc.delimiter']]\r\n        ],\r\n        parameters: [\r\n            [/\\$\\d+/, 'variable.predefined'],\r\n            [/\\$\\w+/, 'variable'],\r\n            [/\\$[*@#?\\-$!0_]/, 'variable'],\r\n            [/\\$'/, 'variable', '@parameterBodyQuote'],\r\n            [/\\$\"/, 'variable', '@parameterBodyDoubleQuote'],\r\n            [/\\$\\(/, 'variable', '@parameterBodyParen'],\r\n            [/\\$\\{/, 'variable', '@parameterBodyCurlyBrace'],\r\n        ],\r\n        parameterBodyQuote: [\r\n            [/[^#:%*@\\-!_']+/, 'variable'],\r\n            [/[#:%*@\\-!_]/, 'delimiter'],\r\n            [/[']/, 'variable', '@pop'],\r\n        ],\r\n        parameterBodyDoubleQuote: [\r\n            [/[^#:%*@\\-!_\"]+/, 'variable'],\r\n            [/[#:%*@\\-!_]/, 'delimiter'],\r\n            [/[\"]/, 'variable', '@pop'],\r\n        ],\r\n        parameterBodyParen: [\r\n            [/[^#:%*@\\-!_)]+/, 'variable'],\r\n            [/[#:%*@\\-!_]/, 'delimiter'],\r\n            [/[)]/, 'variable', '@pop'],\r\n        ],\r\n        parameterBodyCurlyBrace: [\r\n            [/[^#:%*@\\-!_}]+/, 'variable'],\r\n            [/[#:%*@\\-!_]/, 'delimiter'],\r\n            [/[}]/, 'variable', '@pop'],\r\n        ],\r\n    }\r\n};\r\n"],"sourceRoot":"webpack:///","file":"shell-js-es5.js"}