{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/r/r.js"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '#'\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n    ]\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.r',\r\n    roxygen: [\r\n        '@param',\r\n        '@return',\r\n        '@name',\r\n        '@rdname',\r\n        '@examples',\r\n        '@include',\r\n        '@docType',\r\n        '@S3method',\r\n        '@TODO',\r\n        '@aliases',\r\n        '@alias',\r\n        '@assignee',\r\n        '@author',\r\n        '@callGraphDepth',\r\n        '@callGraph',\r\n        '@callGraphPrimitives',\r\n        '@concept',\r\n        '@exportClass',\r\n        '@exportMethod',\r\n        '@exportPattern',\r\n        '@export',\r\n        '@formals',\r\n        '@format',\r\n        '@importClassesFrom',\r\n        '@importFrom',\r\n        '@importMethodsFrom',\r\n        '@import',\r\n        '@keywords',\r\n        '@method',\r\n        '@nord',\r\n        '@note',\r\n        '@references',\r\n        '@seealso',\r\n        '@setClass',\r\n        '@slot',\r\n        '@source',\r\n        '@title',\r\n        '@usage'\r\n    ],\r\n    constants: [\r\n        'NULL',\r\n        'FALSE',\r\n        'TRUE',\r\n        'NA',\r\n        'Inf',\r\n        'NaN ',\r\n        'NA_integer_',\r\n        'NA_real_',\r\n        'NA_complex_',\r\n        'NA_character_ ',\r\n        'T',\r\n        'F',\r\n        'LETTERS',\r\n        'letters',\r\n        'month.abb',\r\n        'month.name',\r\n        'pi',\r\n        'R.version.string'\r\n    ],\r\n    keywords: [\r\n        'break',\r\n        'next',\r\n        'return',\r\n        'if',\r\n        'else',\r\n        'for',\r\n        'in',\r\n        'repeat',\r\n        'while',\r\n        'array',\r\n        'category',\r\n        'character',\r\n        'complex',\r\n        'double',\r\n        'function',\r\n        'integer',\r\n        'list',\r\n        'logical',\r\n        'matrix',\r\n        'numeric',\r\n        'vector',\r\n        'data.frame',\r\n        'factor',\r\n        'library',\r\n        'require',\r\n        'attach',\r\n        'detach',\r\n        'source'\r\n    ],\r\n    special: [\r\n        '\\\\n',\r\n        '\\\\r',\r\n        '\\\\t',\r\n        '\\\\b',\r\n        '\\\\a',\r\n        '\\\\f',\r\n        '\\\\v',\r\n        '\\\\\\'',\r\n        '\\\\\"',\r\n        '\\\\\\\\'\r\n    ],\r\n    brackets: [\r\n        { open: '{', close: '}', token: 'delimiter.curly' },\r\n        { open: '[', close: ']', token: 'delimiter.bracket' },\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\r\n    ],\r\n    tokenizer: {\r\n        root: [\r\n            { include: '@numbers' },\r\n            { include: '@strings' },\r\n            [/[{}\\[\\]()]/, '@brackets'],\r\n            { include: '@operators' },\r\n            [/#'/, 'comment.doc', '@roxygen'],\r\n            [/(^#.*$)/, 'comment'],\r\n            [/\\s+/, 'white'],\r\n            [/[,:;]/, 'delimiter'],\r\n            [/@[a-zA-Z]\\w*/, 'tag'],\r\n            [/[a-zA-Z]\\w*/, {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@constants': 'constant',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }]\r\n        ],\r\n        // Recognize Roxygen comments\r\n        roxygen: [\r\n            [/@\\w+/, {\r\n                    cases: {\r\n                        '@roxygen': 'tag',\r\n                        '@eos': { token: 'comment.doc', next: '@pop' },\r\n                        '@default': 'comment.doc'\r\n                    }\r\n                }],\r\n            [/\\s+/, {\r\n                    cases: {\r\n                        '@eos': { token: 'comment.doc', next: '@pop' },\r\n                        '@default': 'comment.doc'\r\n                    }\r\n                }],\r\n            [/.*/, { token: 'comment.doc', next: '@pop' }]\r\n        ],\r\n        // Recognize positives, negatives, decimals, imaginaries, and scientific notation\r\n        numbers: [\r\n            [/0[xX][0-9a-fA-F]+/, 'number.hex'],\r\n            [/-?(\\d*\\.)?\\d+([eE][+\\-]?\\d+)?/, 'number']\r\n        ],\r\n        // Recognize operators\r\n        operators: [\r\n            [/<{1,2}-/, 'operator'],\r\n            [/->{1,2}/, 'operator'],\r\n            [/%[^%\\s]+%/, 'operator'],\r\n            [/\\*\\*/, 'operator'],\r\n            [/%%/, 'operator'],\r\n            [/&&/, 'operator'],\r\n            [/\\|\\|/, 'operator'],\r\n            [/<</, 'operator'],\r\n            [/>>/, 'operator'],\r\n            [/[-+=&|!<>^~*/:$]/, 'operator']\r\n        ],\r\n        // Recognize strings, including those broken across lines\r\n        strings: [\r\n            [/'/, 'string.escape', '@stringBody'],\r\n            [/\"/, 'string.escape', '@dblStringBody']\r\n        ],\r\n        stringBody: [\r\n            [/\\\\./, {\r\n                    cases: {\r\n                        '@special': 'string',\r\n                        '@default': 'error-token'\r\n                    }\r\n                }],\r\n            [/'/, 'string.escape', '@popall'],\r\n            [/./, 'string'],\r\n        ],\r\n        dblStringBody: [\r\n            [/\\\\./, {\r\n                    cases: {\r\n                        '@special': 'string',\r\n                        '@default': 'error-token'\r\n                    }\r\n                }],\r\n            [/\"/, 'string.escape', '@popall'],\r\n            [/./, 'string'],\r\n        ]\r\n    }\r\n};\r\n"],"sourceRoot":"webpack:///","file":"r-js-es5.js"}