{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/pascaligo/pascaligo.js"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['(*', '*)'],\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')'],\r\n        ['<', '>'],\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '<', close: '>' },\r\n        { open: '\\'', close: '\\'' },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '<', close: '>' },\r\n        { open: '\\'', close: '\\'' },\r\n    ]\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.pascaligo',\r\n    ignoreCase: true,\r\n    brackets: [\r\n        { open: '{', close: '}', token: 'delimiter.curly' },\r\n        { open: '[', close: ']', token: 'delimiter.square' },\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\r\n        { open: '<', close: '>', token: 'delimiter.angle' }\r\n    ],\r\n    keywords: [\r\n        'begin', 'block', 'case', 'const', 'else', 'end',\r\n        'fail', 'for', 'from', 'function', 'if', 'is', 'nil',\r\n        'of', 'remove', 'return', 'skip', 'then', 'type', 'var',\r\n        'while', 'with', 'option', 'None', 'transaction'\r\n    ],\r\n    typeKeywords: [\r\n        'bool', 'int', 'list', 'map', 'nat', 'record',\r\n        'string', 'unit', 'address', 'map', 'mtz', 'xtz'\r\n    ],\r\n    operators: [\r\n        '=', '>', '<', '<=', '>=', '<>', ':', ':=', 'and', 'mod', 'or',\r\n        '+', '-', '*', '/', '@', '&', '^', '%'\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[=><:@\\^&|+\\-*\\/\\^%]+/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // identifiers and keywords\r\n            [/[a-zA-Z_][\\w]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // delimiters and operators\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/[<>](?!@symbols)/, '@brackets'],\r\n            [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            // numbers\r\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n            [/\\$[0-9a-fA-F]{1,16}/, 'number.hex'],\r\n            [/\\d+/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            // strings\r\n            [/'([^'\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/'/, 'string', '@string'],\r\n            // characters\r\n            [/'[^\\\\']'/, 'string'],\r\n            [/'/, 'string.invalid'],\r\n            [/\\#\\d+/, 'string']\r\n        ],\r\n        /* */\r\n        comment: [\r\n            [/[^\\(\\*]+/, 'comment'],\r\n            //[/\\(\\*/,    'comment', '@push' ],    // nested comment  not allowed :-(\r\n            [/\\*\\)/, 'comment', '@pop'],\r\n            [/\\(\\*/, 'comment']\r\n        ],\r\n        string: [\r\n            [/[^\\\\']+/, 'string'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/'/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, 'white'],\r\n            [/\\(\\*/, 'comment', '@comment'],\r\n            [/\\/\\/.*$/, 'comment'],\r\n        ],\r\n    },\r\n};\r\n"],"sourceRoot":"webpack:///","file":"pascaligo-js-es5.js"}