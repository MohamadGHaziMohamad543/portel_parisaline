{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/php/php.js"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['/*', '*/']\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}', notIn: ['string'] },\r\n        { open: '[', close: ']', notIn: ['string'] },\r\n        { open: '(', close: ')', notIn: ['string'] },\r\n        { open: '\"', close: '\"', notIn: ['string'] },\r\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] }\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*(#|\\/\\/)region\\\\b\"),\r\n            end: new RegExp(\"^\\\\s*(#|\\/\\/)endregion\\\\b\")\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '',\r\n    // ignoreCase: true,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.root' }],\r\n            [/<!DOCTYPE/, 'metatag.html', '@doctype'],\r\n            [/<!--/, 'comment.html', '@comment'],\r\n            [/(<)(\\w+)(\\/>)/, ['delimiter.html', 'tag.html', 'delimiter.html']],\r\n            [/(<)(script)/, ['delimiter.html', { token: 'tag.html', next: '@script' }]],\r\n            [/(<)(style)/, ['delimiter.html', { token: 'tag.html', next: '@style' }]],\r\n            [/(<)([:\\w]+)/, ['delimiter.html', { token: 'tag.html', next: '@otherTag' }]],\r\n            [/(<\\/)(\\w+)/, ['delimiter.html', { token: 'tag.html', next: '@otherTag' }]],\r\n            [/</, 'delimiter.html'],\r\n            [/[^<]+/] // text\r\n        ],\r\n        doctype: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.comment' }],\r\n            [/[^>]+/, 'metatag.content.html'],\r\n            [/>/, 'metatag.html', '@pop'],\r\n        ],\r\n        comment: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.comment' }],\r\n            [/-->/, 'comment.html', '@pop'],\r\n            [/[^-]+/, 'comment.content.html'],\r\n            [/./, 'comment.content.html']\r\n        ],\r\n        otherTag: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.otherTag' }],\r\n            [/\\/?>/, 'delimiter.html', '@pop'],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/[ \\t\\r\\n]+/],\r\n        ],\r\n        // -- BEGIN <script> tags handling\r\n        // After <script\r\n        script: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.script' }],\r\n            [/type/, 'attribute.name', '@scriptAfterType'],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/(<\\/)(script\\s*)(>)/, ['delimiter.html', 'tag.html', { token: 'delimiter.html', next: '@pop' }]]\r\n        ],\r\n        // After <script ... type\r\n        scriptAfterType: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.scriptAfterType' }],\r\n            [/=/, 'delimiter', '@scriptAfterTypeEquals'],\r\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <script ... type =\r\n        scriptAfterTypeEquals: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.scriptAfterTypeEquals' }],\r\n            [/\"([^\"]*)\"/, { token: 'attribute.value', switchTo: '@scriptWithCustomType.$1' }],\r\n            [/'([^']*)'/, { token: 'attribute.value', switchTo: '@scriptWithCustomType.$1' }],\r\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <script ... type = $S2\r\n        scriptWithCustomType: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.scriptWithCustomType.$S2' }],\r\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.$S2', nextEmbedded: '$S2' }],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        scriptEmbedded: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInEmbeddedState.scriptEmbedded.$S2', nextEmbedded: '@pop' }],\r\n            [/<\\/script/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }]\r\n        ],\r\n        // -- END <script> tags handling\r\n        // -- BEGIN <style> tags handling\r\n        // After <style\r\n        style: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.style' }],\r\n            [/type/, 'attribute.name', '@styleAfterType'],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/(<\\/)(style\\s*)(>)/, ['delimiter.html', 'tag.html', { token: 'delimiter.html', next: '@pop' }]]\r\n        ],\r\n        // After <style ... type\r\n        styleAfterType: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.styleAfterType' }],\r\n            [/=/, 'delimiter', '@styleAfterTypeEquals'],\r\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <style ... type =\r\n        styleAfterTypeEquals: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.styleAfterTypeEquals' }],\r\n            [/\"([^\"]*)\"/, { token: 'attribute.value', switchTo: '@styleWithCustomType.$1' }],\r\n            [/'([^']*)'/, { token: 'attribute.value', switchTo: '@styleWithCustomType.$1' }],\r\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <style ... type = $S2\r\n        styleWithCustomType: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.styleWithCustomType.$S2' }],\r\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.$S2', nextEmbedded: '$S2' }],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        styleEmbedded: [\r\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInEmbeddedState.styleEmbedded.$S2', nextEmbedded: '@pop' }],\r\n            [/<\\/style/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }]\r\n        ],\r\n        // -- END <style> tags handling\r\n        phpInSimpleState: [\r\n            [/<\\?((php)|=)?/, 'metatag.php'],\r\n            [/\\?>/, { token: 'metatag.php', switchTo: '@$S2.$S3' }],\r\n            { include: 'phpRoot' }\r\n        ],\r\n        phpInEmbeddedState: [\r\n            [/<\\?((php)|=)?/, 'metatag.php'],\r\n            [/\\?>/, { token: 'metatag.php', switchTo: '@$S2.$S3', nextEmbedded: '$S3' }],\r\n            { include: 'phpRoot' }\r\n        ],\r\n        phpRoot: [\r\n            [/[a-zA-Z_]\\w*/, {\r\n                    cases: {\r\n                        '@phpKeywords': { token: 'keyword.php' },\r\n                        '@phpCompileTimeConstants': { token: 'constant.php' },\r\n                        '@default': 'identifier.php'\r\n                    }\r\n                }],\r\n            [/[$a-zA-Z_]\\w*/, {\r\n                    cases: {\r\n                        '@phpPreDefinedVariables': { token: 'variable.predefined.php' },\r\n                        '@default': 'variable.php'\r\n                    }\r\n                }],\r\n            // brackets\r\n            [/[{}]/, 'delimiter.bracket.php'],\r\n            [/[\\[\\]]/, 'delimiter.array.php'],\r\n            [/[()]/, 'delimiter.parenthesis.php'],\r\n            // whitespace\r\n            [/[ \\t\\r\\n]+/],\r\n            // comments\r\n            [/(#|\\/\\/)$/, 'comment.php'],\r\n            [/(#|\\/\\/)/, 'comment.php', '@phpLineComment'],\r\n            // block comments\r\n            [/\\/\\*/, 'comment.php', '@phpComment'],\r\n            // strings\r\n            [/\"/, 'string.php', '@phpDoubleQuoteString'],\r\n            [/'/, 'string.php', '@phpSingleQuoteString'],\r\n            // delimiters\r\n            [/[\\+\\-\\*\\%\\&\\|\\^\\~\\!\\=\\<\\>\\/\\?\\;\\:\\.\\,\\@]/, 'delimiter.php'],\r\n            // numbers\r\n            [/\\d*\\d+[eE]([\\-+]?\\d+)?/, 'number.float.php'],\r\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float.php'],\r\n            [/0[xX][0-9a-fA-F']*[0-9a-fA-F]/, 'number.hex.php'],\r\n            [/0[0-7']*[0-7]/, 'number.octal.php'],\r\n            [/0[bB][0-1']*[0-1]/, 'number.binary.php'],\r\n            [/\\d[\\d']*/, 'number.php'],\r\n            [/\\d/, 'number.php'],\r\n        ],\r\n        phpComment: [\r\n            [/\\*\\//, 'comment.php', '@pop'],\r\n            [/[^*]+/, 'comment.php'],\r\n            [/./, 'comment.php']\r\n        ],\r\n        phpLineComment: [\r\n            [/\\?>/, { token: '@rematch', next: '@pop' }],\r\n            [/.$/, 'comment.php', '@pop'],\r\n            [/[^?]+$/, 'comment.php', '@pop'],\r\n            [/[^?]+/, 'comment.php'],\r\n            [/./, 'comment.php']\r\n        ],\r\n        phpDoubleQuoteString: [\r\n            [/[^\\\\\"]+/, 'string.php'],\r\n            [/@escapes/, 'string.escape.php'],\r\n            [/\\\\./, 'string.escape.invalid.php'],\r\n            [/\"/, 'string.php', '@pop']\r\n        ],\r\n        phpSingleQuoteString: [\r\n            [/[^\\\\']+/, 'string.php'],\r\n            [/@escapes/, 'string.escape.php'],\r\n            [/\\\\./, 'string.escape.invalid.php'],\r\n            [/'/, 'string.php', '@pop']\r\n        ],\r\n    },\r\n    phpKeywords: [\r\n        'abstract', 'and', 'array', 'as', 'break',\r\n        'callable', 'case', 'catch', 'cfunction', 'class', 'clone',\r\n        'const', 'continue', 'declare', 'default', 'do',\r\n        'else', 'elseif', 'enddeclare', 'endfor', 'endforeach',\r\n        'endif', 'endswitch', 'endwhile', 'extends', 'false', 'final',\r\n        'for', 'foreach', 'function', 'global', 'goto',\r\n        'if', 'implements', 'interface', 'instanceof', 'insteadof',\r\n        'namespace', 'new', 'null', 'object', 'old_function', 'or', 'private',\r\n        'protected', 'public', 'resource', 'static', 'switch', 'throw', 'trait',\r\n        'try', 'true', 'use', 'var', 'while', 'xor',\r\n        'die', 'echo', 'empty', 'exit', 'eval',\r\n        'include', 'include_once', 'isset', 'list', 'require',\r\n        'require_once', 'return', 'print', 'unset', 'yield',\r\n        '__construct'\r\n    ],\r\n    phpCompileTimeConstants: [\r\n        '__CLASS__',\r\n        '__DIR__',\r\n        '__FILE__',\r\n        '__LINE__',\r\n        '__NAMESPACE__',\r\n        '__METHOD__',\r\n        '__FUNCTION__',\r\n        '__TRAIT__'\r\n    ],\r\n    phpPreDefinedVariables: [\r\n        '$GLOBALS',\r\n        '$_SERVER',\r\n        '$_GET',\r\n        '$_POST',\r\n        '$_FILES',\r\n        '$_REQUEST',\r\n        '$_SESSION',\r\n        '$_ENV',\r\n        '$_COOKIE',\r\n        '$php_errormsg',\r\n        '$HTTP_RAW_POST_DATA',\r\n        '$http_response_header',\r\n        '$argc',\r\n        '$argv'\r\n    ],\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n};\r\n"],"sourceRoot":"webpack:///","file":"php-js-es5.js"}