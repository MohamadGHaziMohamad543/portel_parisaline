{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/bat/bat.js"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: 'REM'\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*(::\\\\s*|REM\\\\s+)#region\"),\r\n            end: new RegExp(\"^\\\\s*(::\\\\s*|REM\\\\s+)#endregion\")\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    ignoreCase: true,\r\n    tokenPostfix: '.bat',\r\n    brackets: [\r\n        { token: 'delimiter.bracket', open: '{', close: '}' },\r\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\r\n        { token: 'delimiter.square', open: '[', close: ']' }\r\n    ],\r\n    keywords: /call|defined|echo|errorlevel|exist|for|goto|if|pause|set|shift|start|title|not|pushd|popd/,\r\n    // we include these common regular expressions\r\n    symbols: /[=><!~?&|+\\-*\\/\\^;\\.,]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            [/^(\\s*)(rem(?:\\s.*|))$/, ['', 'comment']],\r\n            [/(\\@?)(@keywords)(?!\\w)/, [{ token: 'keyword' }, { token: 'keyword.$2' }]],\r\n            // whitespace\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            // blocks\r\n            [/setlocal(?!\\w)/, 'keyword.tag-setlocal'],\r\n            [/endlocal(?!\\w)/, 'keyword.tag-setlocal'],\r\n            // words\r\n            [/[a-zA-Z_]\\w*/, ''],\r\n            // labels\r\n            [/:\\w*/, 'metatag'],\r\n            // variables\r\n            [/%[^%]+%/, 'variable'],\r\n            [/%%[\\w]+(?!\\w)/, 'variable'],\r\n            // punctuations\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/@symbols/, 'delimiter'],\r\n            // numbers\r\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n            [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'],\r\n            [/\\d+/, 'number'],\r\n            // punctuation: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            // strings:\r\n            [/\"/, 'string', '@string.\"'],\r\n            [/'/, 'string', '@string.\\''],\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"'%]+/, {\r\n                    cases: {\r\n                        '@eos': { token: 'string', next: '@popall' },\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/%[\\w ]+%/, 'variable'],\r\n            [/%%[\\w]+(?!\\w)/, 'variable'],\r\n            [/[\"']/, {\r\n                    cases: {\r\n                        '$#==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n            [/$/, 'string', '@popall']\r\n        ],\r\n    }\r\n};\r\n"],"sourceRoot":"webpack:///","file":"bat-js-es5.js"}