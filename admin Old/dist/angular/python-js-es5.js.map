{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/python/python.js"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\n// Allow for running under nodejs/requirejs in tests\r\nvar _monaco = (typeof monaco === 'undefined' ? self.monaco : monaco);\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '#',\r\n        blockComment: ['\\'\\'\\'', '\\'\\'\\''],\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"', notIn: ['string'] },\r\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ],\r\n    onEnterRules: [\r\n        {\r\n            beforeText: new RegExp(\"^\\\\s*(?:def|class|for|if|elif|else|while|try|with|finally|except|async).*?:\\\\s*$\"),\r\n            action: { indentAction: _monaco.languages.IndentAction.Indent }\r\n        }\r\n    ],\r\n    folding: {\r\n        offSide: true,\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*#region\\\\b\"),\r\n            end: new RegExp(\"^\\\\s*#endregion\\\\b\")\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.python',\r\n    keywords: [\r\n        'and',\r\n        'as',\r\n        'assert',\r\n        'break',\r\n        'class',\r\n        'continue',\r\n        'def',\r\n        'del',\r\n        'elif',\r\n        'else',\r\n        'except',\r\n        'exec',\r\n        'finally',\r\n        'for',\r\n        'from',\r\n        'global',\r\n        'if',\r\n        'import',\r\n        'in',\r\n        'is',\r\n        'lambda',\r\n        'None',\r\n        'not',\r\n        'or',\r\n        'pass',\r\n        'print',\r\n        'raise',\r\n        'return',\r\n        'self',\r\n        'try',\r\n        'while',\r\n        'with',\r\n        'yield',\r\n        'int',\r\n        'float',\r\n        'long',\r\n        'complex',\r\n        'hex',\r\n        'abs',\r\n        'all',\r\n        'any',\r\n        'apply',\r\n        'basestring',\r\n        'bin',\r\n        'bool',\r\n        'buffer',\r\n        'bytearray',\r\n        'callable',\r\n        'chr',\r\n        'classmethod',\r\n        'cmp',\r\n        'coerce',\r\n        'compile',\r\n        'complex',\r\n        'delattr',\r\n        'dict',\r\n        'dir',\r\n        'divmod',\r\n        'enumerate',\r\n        'eval',\r\n        'execfile',\r\n        'file',\r\n        'filter',\r\n        'format',\r\n        'frozenset',\r\n        'getattr',\r\n        'globals',\r\n        'hasattr',\r\n        'hash',\r\n        'help',\r\n        'id',\r\n        'input',\r\n        'intern',\r\n        'isinstance',\r\n        'issubclass',\r\n        'iter',\r\n        'len',\r\n        'locals',\r\n        'list',\r\n        'map',\r\n        'max',\r\n        'memoryview',\r\n        'min',\r\n        'next',\r\n        'object',\r\n        'oct',\r\n        'open',\r\n        'ord',\r\n        'pow',\r\n        'print',\r\n        'property',\r\n        'reversed',\r\n        'range',\r\n        'raw_input',\r\n        'reduce',\r\n        'reload',\r\n        'repr',\r\n        'reversed',\r\n        'round',\r\n        'set',\r\n        'setattr',\r\n        'slice',\r\n        'sorted',\r\n        'staticmethod',\r\n        'str',\r\n        'sum',\r\n        'super',\r\n        'tuple',\r\n        'type',\r\n        'unichr',\r\n        'unicode',\r\n        'vars',\r\n        'xrange',\r\n        'zip',\r\n        'True',\r\n        'False',\r\n        '__dict__',\r\n        '__methods__',\r\n        '__members__',\r\n        '__class__',\r\n        '__bases__',\r\n        '__name__',\r\n        '__mro__',\r\n        '__subclasses__',\r\n        '__init__',\r\n        '__import__'\r\n    ],\r\n    brackets: [\r\n        { open: '{', close: '}', token: 'delimiter.curly' },\r\n        { open: '[', close: ']', token: 'delimiter.bracket' },\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\r\n    ],\r\n    tokenizer: {\r\n        root: [\r\n            { include: '@whitespace' },\r\n            { include: '@numbers' },\r\n            { include: '@strings' },\r\n            [/[,:;]/, 'delimiter'],\r\n            [/[{}\\[\\]()]/, '@brackets'],\r\n            [/@[a-zA-Z]\\w*/, 'tag'],\r\n            [/[a-zA-Z]\\w*/, {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }]\r\n        ],\r\n        // Deal with white space, including single and multi-line comments\r\n        whitespace: [\r\n            [/\\s+/, 'white'],\r\n            [/(^#.*$)/, 'comment'],\r\n            [/'''/, 'string', '@endDocString'],\r\n            [/\"\"\"/, 'string', '@endDblDocString']\r\n        ],\r\n        endDocString: [\r\n            [/[^']+/, 'string'],\r\n            [/\\\\'/, 'string'],\r\n            [/'''/, 'string', '@popall'],\r\n            [/'/, 'string']\r\n        ],\r\n        endDblDocString: [\r\n            [/[^\"]+/, 'string'],\r\n            [/\\\\\"/, 'string'],\r\n            [/\"\"\"/, 'string', '@popall'],\r\n            [/\"/, 'string']\r\n        ],\r\n        // Recognize hex, negatives, decimals, imaginaries, longs, and scientific notation\r\n        numbers: [\r\n            [/-?0x([abcdef]|[ABCDEF]|\\d)+[lL]?/, 'number.hex'],\r\n            [/-?(\\d*\\.)?\\d+([eE][+\\-]?\\d+)?[jJ]?[lL]?/, 'number']\r\n        ],\r\n        // Recognize strings, including those broken across lines with \\ (but not without)\r\n        strings: [\r\n            [/'$/, 'string.escape', '@popall'],\r\n            [/'/, 'string.escape', '@stringBody'],\r\n            [/\"$/, 'string.escape', '@popall'],\r\n            [/\"/, 'string.escape', '@dblStringBody']\r\n        ],\r\n        stringBody: [\r\n            [/[^\\\\']+$/, 'string', '@popall'],\r\n            [/[^\\\\']+/, 'string'],\r\n            [/\\\\./, 'string'],\r\n            [/'/, 'string.escape', '@popall'],\r\n            [/\\\\$/, 'string']\r\n        ],\r\n        dblStringBody: [\r\n            [/[^\\\\\"]+$/, 'string', '@popall'],\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/\\\\./, 'string'],\r\n            [/\"/, 'string.escape', '@popall'],\r\n            [/\\\\$/, 'string']\r\n        ]\r\n    }\r\n};\r\n"],"sourceRoot":"webpack:///","file":"python-js-es5.js"}