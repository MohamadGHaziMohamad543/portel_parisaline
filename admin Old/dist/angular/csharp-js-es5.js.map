{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/csharp/csharp.js"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['/*', '*/'],\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')'],\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\r\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '<', close: '>' },\r\n        { open: '\\'', close: '\\'' },\r\n        { open: '\"', close: '\"' },\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*#region\\\\b\"),\r\n            end: new RegExp(\"^\\\\s*#endregion\\\\b\")\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.cs',\r\n    brackets: [\r\n        { open: '{', close: '}', token: 'delimiter.curly' },\r\n        { open: '[', close: ']', token: 'delimiter.square' },\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\r\n        { open: '<', close: '>', token: 'delimiter.angle' }\r\n    ],\r\n    keywords: [\r\n        'extern', 'alias', 'using', 'bool', 'decimal', 'sbyte', 'byte', 'short',\r\n        'ushort', 'int', 'uint', 'long', 'ulong', 'char', 'float', 'double',\r\n        'object', 'dynamic', 'string', 'assembly', 'is', 'as', 'ref',\r\n        'out', 'this', 'base', 'new', 'typeof', 'void', 'checked', 'unchecked',\r\n        'default', 'delegate', 'var', 'const', 'if', 'else', 'switch', 'case',\r\n        'while', 'do', 'for', 'foreach', 'in', 'break', 'continue', 'goto',\r\n        'return', 'throw', 'try', 'catch', 'finally', 'lock', 'yield', 'from',\r\n        'let', 'where', 'join', 'on', 'equals', 'into', 'orderby', 'ascending',\r\n        'descending', 'select', 'group', 'by', 'namespace', 'partial', 'class',\r\n        'field', 'event', 'method', 'param', 'property', 'public', 'protected',\r\n        'internal', 'private', 'abstract', 'sealed', 'static', 'struct', 'readonly',\r\n        'volatile', 'virtual', 'override', 'params', 'get', 'set', 'add', 'remove',\r\n        'operator', 'true', 'false', 'implicit', 'explicit', 'interface', 'enum',\r\n        'null', 'async', 'await', 'fixed', 'sizeof', 'stackalloc', 'unsafe', 'nameof',\r\n        'when'\r\n    ],\r\n    namespaceFollows: [\r\n        'namespace', 'using',\r\n    ],\r\n    parenFollows: [\r\n        'if', 'for', 'while', 'switch', 'foreach', 'using', 'catch', 'when'\r\n    ],\r\n    operators: [\r\n        '=', '??', '||', '&&', '|', '^', '&', '==', '!=', '<=', '>=', '<<',\r\n        '+', '-', '*', '/', '%', '!', '~', '++', '--', '+=',\r\n        '-=', '*=', '/=', '%=', '&=', '|=', '^=', '<<=', '>>=', '>>', '=>'\r\n    ],\r\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n    // escape sequences\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // identifiers and keywords\r\n            [/\\@?[a-zA-Z_]\\w*/, {\r\n                    cases: {\r\n                        '@namespaceFollows': { token: 'keyword.$0', next: '@namespace' },\r\n                        '@keywords': { token: 'keyword.$0', next: '@qualified' },\r\n                        '@default': { token: 'identifier', next: '@qualified' }\r\n                    }\r\n                }],\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // delimiters and operators\r\n            [/}/, {\r\n                    cases: {\r\n                        '$S2==interpolatedstring': { token: 'string.quote', next: '@pop' },\r\n                        '$S2==litinterpstring': { token: 'string.quote', next: '@pop' },\r\n                        '@default': '@brackets'\r\n                    }\r\n                }],\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/[<>](?!@symbols)/, '@brackets'],\r\n            [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            // numbers\r\n            [/[0-9_]*\\.[0-9_]+([eE][\\-+]?\\d+)?[fFdD]?/, 'number.float'],\r\n            [/0[xX][0-9a-fA-F_]+/, 'number.hex'],\r\n            [/0[bB][01_]+/, 'number.hex'],\r\n            [/[0-9_]+/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            // strings\r\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/\"/, { token: 'string.quote', next: '@string' }],\r\n            [/\\$\\@\"/, { token: 'string.quote', next: '@litinterpstring' }],\r\n            [/\\@\"/, { token: 'string.quote', next: '@litstring' }],\r\n            [/\\$\"/, { token: 'string.quote', next: '@interpolatedstring' }],\r\n            // characters\r\n            [/'[^\\\\']'/, 'string'],\r\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n            [/'/, 'string.invalid']\r\n        ],\r\n        qualified: [\r\n            [/[a-zA-Z_][\\w]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            [/\\./, 'delimiter'],\r\n            ['', '', '@pop'],\r\n        ],\r\n        namespace: [\r\n            { include: '@whitespace' },\r\n            [/[A-Z]\\w*/, 'namespace'],\r\n            [/[\\.=]/, 'delimiter'],\r\n            ['', '', '@pop'],\r\n        ],\r\n        comment: [\r\n            [/[^\\/*]+/, 'comment'],\r\n            // [/\\/\\*/,    'comment', '@push' ],    // no nested comments :-(\r\n            ['\\\\*/', 'comment', '@pop'],\r\n            [/[\\/*]/, 'comment']\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"/, { token: 'string.quote', next: '@pop' }]\r\n        ],\r\n        litstring: [\r\n            [/[^\"]+/, 'string'],\r\n            [/\"\"/, 'string.escape'],\r\n            [/\"/, { token: 'string.quote', next: '@pop' }]\r\n        ],\r\n        litinterpstring: [\r\n            [/[^\"{]+/, 'string'],\r\n            [/\"\"/, 'string.escape'],\r\n            [/{{/, 'string.escape'],\r\n            [/}}/, 'string.escape'],\r\n            [/{/, { token: 'string.quote', next: 'root.litinterpstring' }],\r\n            [/\"/, { token: 'string.quote', next: '@pop' }]\r\n        ],\r\n        interpolatedstring: [\r\n            [/[^\\\\\"{]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/{{/, 'string.escape'],\r\n            [/}}/, 'string.escape'],\r\n            [/{/, { token: 'string.quote', next: 'root.interpolatedstring' }],\r\n            [/\"/, { token: 'string.quote', next: '@pop' }]\r\n        ],\r\n        whitespace: [\r\n            [/^[ \\t\\v\\f]*#((r)|(load))(?=\\s)/, 'directive.csx'],\r\n            [/^[ \\t\\v\\f]*#\\w.*$/, 'namespace.cpp'],\r\n            [/[ \\t\\v\\f\\r\\n]+/, ''],\r\n            [/\\/\\*/, 'comment', '@comment'],\r\n            [/\\/\\/.*$/, 'comment'],\r\n        ],\r\n    },\r\n};\r\n"],"sourceRoot":"webpack:///","file":"csharp-js-es5.js"}