{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/fsharp/fsharp.js"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['(*', '*)'],\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' }\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*//\\\\s*#region\\\\b|^\\\\s*\\\\(\\\\*\\\\s*#region(.*)\\\\*\\\\)\"),\r\n            end: new RegExp(\"^\\\\s*//\\\\s*#endregion\\\\b|^\\\\s*\\\\(\\\\*\\\\s*#endregion\\\\s*\\\\*\\\\)\")\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.fs',\r\n    keywords: [\r\n        'abstract', 'and', 'atomic', 'as',\r\n        'assert', 'asr', 'base', 'begin',\r\n        'break', 'checked', 'component',\r\n        'const', 'constraint', 'constructor',\r\n        'continue', 'class', 'default',\r\n        'delegate', 'do', 'done', 'downcast',\r\n        'downto', 'elif', 'else', 'end',\r\n        'exception', 'eager', 'event', 'external',\r\n        'extern', 'false', 'finally', 'for',\r\n        'fun', 'function', 'fixed', 'functor',\r\n        'global', 'if', 'in', 'include', 'inherit',\r\n        'inline', 'interface', 'internal', 'land',\r\n        'lor', 'lsl', 'lsr', 'lxor', 'lazy', 'let',\r\n        'match', 'member', 'mod', 'module', 'mutable',\r\n        'namespace', 'method', 'mixin', 'new', 'not',\r\n        'null', 'of', 'open', 'or', 'object',\r\n        'override', 'private', 'parallel', 'process',\r\n        'protected', 'pure', 'public', 'rec', 'return',\r\n        'static', 'sealed', 'struct', 'sig', 'then',\r\n        'to', 'true', 'tailcall', 'trait',\r\n        'try', 'type', 'upcast', 'use',\r\n        'val', 'void', 'virtual', 'volatile',\r\n        'when', 'while', 'with', 'yield'\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[=><!~?:&|+\\-*\\^%;\\.,\\/]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    integersuffix: /[uU]?[yslnLI]?/,\r\n    floatsuffix: /[fFmM]?/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // identifiers and keywords\r\n            [/[a-zA-Z_]\\w*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // [< attributes >].\r\n            [/\\[<.*>\\]/, 'annotation'],\r\n            // Preprocessor directive\r\n            [/^#(if|else|endif)/, 'keyword'],\r\n            // delimiters and operators\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/[<>](?!@symbols)/, '@brackets'],\r\n            [/@symbols/, 'delimiter'],\r\n            // numbers\r\n            [/\\d*\\d+[eE]([\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\r\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\r\n            [/0x[0-9a-fA-F]+LF/, 'number.float'],\r\n            [/0x[0-9a-fA-F]+(@integersuffix)/, 'number.hex'],\r\n            [/0b[0-1]+(@integersuffix)/, 'number.bin'],\r\n            [/\\d+(@integersuffix)/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            // strings\r\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/\"\"\"/, 'string', '@string.\"\"\"'],\r\n            [/\"/, 'string', '@string.\"'],\r\n            // literal string\r\n            [/\\@\"/, { token: 'string.quote', next: '@litstring' }],\r\n            // characters\r\n            [/'[^\\\\']'B?/, 'string'],\r\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n            [/'/, 'string.invalid']\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            [/\\(\\*(?!\\))/, 'comment', '@comment'],\r\n            [/\\/\\/.*$/, 'comment'],\r\n        ],\r\n        comment: [\r\n            [/[^*(]+/, 'comment'],\r\n            [/\\*\\)/, 'comment', '@pop'],\r\n            [/\\*/, 'comment'],\r\n            [/\\(\\*\\)/, 'comment'],\r\n            [/\\(/, 'comment']\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/(\"\"\"|\"B?)/, {\r\n                    cases: {\r\n                        '$#==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': 'string'\r\n                    }\r\n                }]\r\n        ],\r\n        litstring: [\r\n            [/[^\"]+/, 'string'],\r\n            [/\"\"/, 'string.escape'],\r\n            [/\"/, { token: 'string.quote', next: '@pop' }]\r\n        ],\r\n    },\r\n};\r\n"],"sourceRoot":"webpack:///","file":"fsharp-js-es5.js"}