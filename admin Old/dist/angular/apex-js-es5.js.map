{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/apex/apex.js"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    // the default separators except `@$`\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['/*', '*/'],\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')'],\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n        { open: '<', close: '>' },\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\r\n            end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\r\n        }\r\n    }\r\n};\r\nvar keywords = [\r\n    'abstract',\r\n    'activate',\r\n    'and',\r\n    'any',\r\n    'array',\r\n    'as',\r\n    'asc',\r\n    'assert',\r\n    'autonomous',\r\n    'begin',\r\n    'bigdecimal',\r\n    'blob',\r\n    'boolean',\r\n    'break',\r\n    'bulk',\r\n    'by',\r\n    'case',\r\n    'cast',\r\n    'catch',\r\n    'char',\r\n    'class',\r\n    'collect',\r\n    'commit',\r\n    'const',\r\n    'continue',\r\n    'convertcurrency',\r\n    'decimal',\r\n    'default',\r\n    'delete',\r\n    'desc',\r\n    'do',\r\n    'double',\r\n    'else',\r\n    'end',\r\n    'enum',\r\n    'exception',\r\n    'exit',\r\n    'export',\r\n    'extends',\r\n    'false',\r\n    'final',\r\n    'finally',\r\n    'float',\r\n    'for',\r\n    'from',\r\n    'future',\r\n    'get',\r\n    'global',\r\n    'goto',\r\n    'group',\r\n    'having',\r\n    'hint',\r\n    'if',\r\n    'implements',\r\n    'import',\r\n    'in',\r\n    'inner',\r\n    'insert',\r\n    'instanceof',\r\n    'int',\r\n    'interface',\r\n    'into',\r\n    'join',\r\n    'last_90_days',\r\n    'last_month',\r\n    'last_n_days',\r\n    'last_week',\r\n    'like',\r\n    'limit',\r\n    'list',\r\n    'long',\r\n    'loop',\r\n    'map',\r\n    'merge',\r\n    'native',\r\n    'new',\r\n    'next_90_days',\r\n    'next_month',\r\n    'next_n_days',\r\n    'next_week',\r\n    'not',\r\n    'null',\r\n    'nulls',\r\n    'number',\r\n    'object',\r\n    'of',\r\n    'on',\r\n    'or',\r\n    'outer',\r\n    'override',\r\n    'package',\r\n    'parallel',\r\n    'pragma',\r\n    'private',\r\n    'protected',\r\n    'public',\r\n    'retrieve',\r\n    'return',\r\n    'returning',\r\n    'rollback',\r\n    'savepoint',\r\n    'search',\r\n    'select',\r\n    'set',\r\n    'short',\r\n    'sort',\r\n    'stat',\r\n    'static',\r\n    'strictfp',\r\n    'super',\r\n    'switch',\r\n    'synchronized',\r\n    'system',\r\n    'testmethod',\r\n    'then',\r\n    'this',\r\n    'this_month',\r\n    'this_week',\r\n    'throw',\r\n    'throws',\r\n    'today',\r\n    'tolabel',\r\n    'tomorrow',\r\n    'transaction',\r\n    'transient',\r\n    'trigger',\r\n    'true',\r\n    'try',\r\n    'type',\r\n    'undelete',\r\n    'update',\r\n    'upsert',\r\n    'using',\r\n    'virtual',\r\n    'void',\r\n    'volatile',\r\n    'webservice',\r\n    'when',\r\n    'where',\r\n    'while',\r\n    'yesterday'\r\n];\r\n// create case variations of the keywords - apex is case insensitive, but we can't make the highlighter case insensitive\r\n// because we use a heuristic to assume that identifiers starting with an upper case letter are types.\r\nvar uppercaseFirstLetter = function (lowercase) { return lowercase.charAt(0).toUpperCase() + lowercase.substr(1); };\r\nvar keywordsWithCaseVariations = [];\r\nkeywords.forEach(function (lowercase) {\r\n    keywordsWithCaseVariations.push(lowercase);\r\n    keywordsWithCaseVariations.push(lowercase.toUpperCase());\r\n    keywordsWithCaseVariations.push(uppercaseFirstLetter(lowercase));\r\n});\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.apex',\r\n    keywords: keywordsWithCaseVariations,\r\n    operators: [\r\n        '=', '>', '<', '!', '~', '?', ':',\r\n        '==', '<=', '>=', '!=', '&&', '||', '++', '--',\r\n        '+', '-', '*', '/', '&', '|', '^', '%', '<<',\r\n        '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\r\n        '^=', '%=', '<<=', '>>=', '>>>='\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    digits: /\\d+(_+\\d+)*/,\r\n    octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n    binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n    hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // identifiers and keywords\r\n            [/[a-z_$][\\w$]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            // assume that identifiers starting with an uppercase letter are types\r\n            [/[A-Z][\\w\\$]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': 'type.identifier'\r\n                    }\r\n                }],\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // delimiters and operators\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/[<>](?!@symbols)/, '@brackets'],\r\n            [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            // @ annotations.\r\n            [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\r\n            // numbers\r\n            [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n            [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n            [/(@digits)[fFdD]/, 'number.float'],\r\n            [/(@digits)[lL]?/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            // strings\r\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/'([^'\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/\"/, 'string', '@string.\"'],\r\n            [/'/, 'string', '@string.\\''],\r\n            // characters\r\n            [/'[^\\\\']'/, 'string'],\r\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n            [/'/, 'string.invalid']\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@apexdoc'],\r\n            [/\\/\\*/, 'comment', '@comment'],\r\n            [/\\/\\/.*$/, 'comment'],\r\n        ],\r\n        comment: [\r\n            [/[^\\/*]+/, 'comment'],\r\n            // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\r\n            // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\r\n            [/\\*\\//, 'comment', '@pop'],\r\n            [/[\\/*]/, 'comment']\r\n        ],\r\n        //Identical copy of comment above, except for the addition of .doc\r\n        apexdoc: [\r\n            [/[^\\/*]+/, 'comment.doc'],\r\n            [/\\*\\//, 'comment.doc', '@pop'],\r\n            [/[\\/*]/, 'comment.doc']\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"']+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/[\"']/, { cases: { '$#==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': 'string' } }]\r\n        ],\r\n    },\r\n};\r\n"],"sourceRoot":"webpack:///","file":"apex-js-es5.js"}