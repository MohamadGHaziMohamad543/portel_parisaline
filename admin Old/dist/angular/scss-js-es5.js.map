{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/scss/scss.js"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|([@$#!.:]?[\\w-?]+%?)|[@#!.]/g,\r\n    comments: {\r\n        blockComment: ['/*', '*/'],\r\n        lineComment: '//'\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\r\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\r\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\r\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\r\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/\"),\r\n            end: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/\")\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.scss',\r\n    ws: '[ \\t\\n\\r\\f]*',\r\n    identifier: '-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\r\n    brackets: [\r\n        { open: '{', close: '}', token: 'delimiter.curly' },\r\n        { open: '[', close: ']', token: 'delimiter.bracket' },\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\r\n        { open: '<', close: '>', token: 'delimiter.angle' }\r\n    ],\r\n    tokenizer: {\r\n        root: [\r\n            { include: '@selector' },\r\n        ],\r\n        selector: [\r\n            { include: '@comments' },\r\n            { include: '@import' },\r\n            { include: '@variabledeclaration' },\r\n            { include: '@warndebug' },\r\n            ['[@](include)', { token: 'keyword', next: '@includedeclaration' }],\r\n            ['[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)', { token: 'keyword', next: '@keyframedeclaration' }],\r\n            ['[@](page|content|font-face|-moz-document)', { token: 'keyword' }],\r\n            ['[@](charset|namespace)', { token: 'keyword', next: '@declarationbody' }],\r\n            ['[@](function)', { token: 'keyword', next: '@functiondeclaration' }],\r\n            ['[@](mixin)', { token: 'keyword', next: '@mixindeclaration' }],\r\n            ['url(\\\\-prefix)?\\\\(', { token: 'meta', next: '@urldeclaration' }],\r\n            { include: '@controlstatement' },\r\n            { include: '@selectorname' },\r\n            ['[&\\\\*]', 'tag'],\r\n            ['[>\\\\+,]', 'delimiter'],\r\n            ['\\\\[', { token: 'delimiter.bracket', next: '@selectorattribute' }],\r\n            ['{', { token: 'delimiter.curly', next: '@selectorbody' }],\r\n        ],\r\n        selectorbody: [\r\n            ['[*_]?@identifier@ws:(?=(\\\\s|\\\\d|[^{;}]*[;}]))', 'attribute.name', '@rulevalue'],\r\n            { include: '@selector' },\r\n            ['[@](extend)', { token: 'keyword', next: '@extendbody' }],\r\n            ['[@](return)', { token: 'keyword', next: '@declarationbody' }],\r\n            ['}', { token: 'delimiter.curly', next: '@pop' }],\r\n        ],\r\n        selectorname: [\r\n            ['#{', { token: 'meta', next: '@variableinterpolation' }],\r\n            ['(\\\\.|#(?=[^{])|%|(@identifier)|:)+', 'tag'],\r\n        ],\r\n        selectorattribute: [\r\n            { include: '@term' },\r\n            [']', { token: 'delimiter.bracket', next: '@pop' }],\r\n        ],\r\n        term: [\r\n            { include: '@comments' },\r\n            ['url(\\\\-prefix)?\\\\(', { token: 'meta', next: '@urldeclaration' }],\r\n            { include: '@functioninvocation' },\r\n            { include: '@numbers' },\r\n            { include: '@strings' },\r\n            { include: '@variablereference' },\r\n            ['(and\\\\b|or\\\\b|not\\\\b)', 'operator'],\r\n            { include: '@name' },\r\n            ['([<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,])', 'operator'],\r\n            [',', 'delimiter'],\r\n            ['!default', 'literal'],\r\n            ['\\\\(', { token: 'delimiter.parenthesis', next: '@parenthizedterm' }],\r\n        ],\r\n        rulevalue: [\r\n            { include: '@term' },\r\n            ['!important', 'literal'],\r\n            [';', 'delimiter', '@pop'],\r\n            ['{', { token: 'delimiter.curly', switchTo: '@nestedproperty' }],\r\n            ['(?=})', { token: '', next: '@pop' }],\r\n        ],\r\n        nestedproperty: [\r\n            ['[*_]?@identifier@ws:', 'attribute.name', '@rulevalue'],\r\n            { include: '@comments' },\r\n            ['}', { token: 'delimiter.curly', next: '@pop' }],\r\n        ],\r\n        warndebug: [\r\n            ['[@](warn|debug)', { token: 'keyword', next: '@declarationbody' }],\r\n        ],\r\n        import: [\r\n            ['[@](import)', { token: 'keyword', next: '@declarationbody' }],\r\n        ],\r\n        variabledeclaration: [\r\n            ['\\\\$@identifier@ws:', 'variable.decl', '@declarationbody'],\r\n        ],\r\n        urldeclaration: [\r\n            { include: '@strings' },\r\n            ['[^)\\r\\n]+', 'string'],\r\n            ['\\\\)', { token: 'meta', next: '@pop' }],\r\n        ],\r\n        parenthizedterm: [\r\n            { include: '@term' },\r\n            ['\\\\)', { token: 'delimiter.parenthesis', next: '@pop' }],\r\n        ],\r\n        declarationbody: [\r\n            { include: '@term' },\r\n            [';', 'delimiter', '@pop'],\r\n            ['(?=})', { token: '', next: '@pop' }],\r\n        ],\r\n        extendbody: [\r\n            { include: '@selectorname' },\r\n            ['!optional', 'literal'],\r\n            [';', 'delimiter', '@pop'],\r\n            ['(?=})', { token: '', next: '@pop' }],\r\n        ],\r\n        variablereference: [\r\n            ['\\\\$@identifier', 'variable.ref'],\r\n            ['\\\\.\\\\.\\\\.', 'operator'],\r\n            ['#{', { token: 'meta', next: '@variableinterpolation' }],\r\n        ],\r\n        variableinterpolation: [\r\n            { include: '@variablereference' },\r\n            ['}', { token: 'meta', next: '@pop' }],\r\n        ],\r\n        comments: [\r\n            ['\\\\/\\\\*', 'comment', '@comment'],\r\n            ['\\\\/\\\\/+.*', 'comment'],\r\n        ],\r\n        comment: [\r\n            ['\\\\*\\\\/', 'comment', '@pop'],\r\n            ['.', 'comment'],\r\n        ],\r\n        name: [\r\n            ['@identifier', 'attribute.value'],\r\n        ],\r\n        numbers: [\r\n            ['(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?', { token: 'number', next: '@units' }],\r\n            ['#[0-9a-fA-F_]+(?!\\\\w)', 'number.hex'],\r\n        ],\r\n        units: [\r\n            ['(em|ex|ch|rem|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?', 'number', '@pop']\r\n        ],\r\n        functiondeclaration: [\r\n            ['@identifier@ws\\\\(', { token: 'meta', next: '@parameterdeclaration' }],\r\n            ['{', { token: 'delimiter.curly', switchTo: '@functionbody' }],\r\n        ],\r\n        mixindeclaration: [\r\n            // mixin with parameters\r\n            ['@identifier@ws\\\\(', { token: 'meta', next: '@parameterdeclaration' }],\r\n            // mixin without parameters\r\n            ['@identifier', 'meta'],\r\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }],\r\n        ],\r\n        parameterdeclaration: [\r\n            ['\\\\$@identifier@ws:', 'variable.decl'],\r\n            ['\\\\.\\\\.\\\\.', 'operator'],\r\n            [',', 'delimiter'],\r\n            { include: '@term' },\r\n            ['\\\\)', { token: 'meta', next: '@pop' }],\r\n        ],\r\n        includedeclaration: [\r\n            { include: '@functioninvocation' },\r\n            ['@identifier', 'meta'],\r\n            [';', 'delimiter', '@pop'],\r\n            ['(?=})', { token: '', next: '@pop' }],\r\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }],\r\n        ],\r\n        keyframedeclaration: [\r\n            ['@identifier', 'meta'],\r\n            ['{', { token: 'delimiter.curly', switchTo: '@keyframebody' }],\r\n        ],\r\n        keyframebody: [\r\n            { include: '@term' },\r\n            ['{', { token: 'delimiter.curly', next: '@selectorbody' }],\r\n            ['}', { token: 'delimiter.curly', next: '@pop' }],\r\n        ],\r\n        controlstatement: [\r\n            ['[@](if|else|for|while|each|media)', { token: 'keyword.flow', next: '@controlstatementdeclaration' }],\r\n        ],\r\n        controlstatementdeclaration: [\r\n            ['(in|from|through|if|to)\\\\b', { token: 'keyword.flow' }],\r\n            { include: '@term' },\r\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }],\r\n        ],\r\n        functionbody: [\r\n            ['[@](return)', { token: 'keyword' }],\r\n            { include: '@variabledeclaration' },\r\n            { include: '@term' },\r\n            { include: '@controlstatement' },\r\n            [';', 'delimiter'],\r\n            ['}', { token: 'delimiter.curly', next: '@pop' }],\r\n        ],\r\n        functioninvocation: [\r\n            ['@identifier\\\\(', { token: 'meta', next: '@functionarguments' }],\r\n        ],\r\n        functionarguments: [\r\n            ['\\\\$@identifier@ws:', 'attribute.name'],\r\n            ['[,]', 'delimiter'],\r\n            { include: '@term' },\r\n            ['\\\\)', { token: 'meta', next: '@pop' }],\r\n        ],\r\n        strings: [\r\n            ['~?\"', { token: 'string.delimiter', next: '@stringenddoublequote' }],\r\n            ['~?\\'', { token: 'string.delimiter', next: '@stringendquote' }]\r\n        ],\r\n        stringenddoublequote: [\r\n            ['\\\\\\\\.', 'string'],\r\n            ['\"', { token: 'string.delimiter', next: '@pop' }],\r\n            ['.', 'string']\r\n        ],\r\n        stringendquote: [\r\n            ['\\\\\\\\.', 'string'],\r\n            ['\\'', { token: 'string.delimiter', next: '@pop' }],\r\n            ['.', 'string']\r\n        ]\r\n    }\r\n};\r\n"],"sourceRoot":"webpack:///","file":"scss-js-es5.js"}